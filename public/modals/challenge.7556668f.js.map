{"mappings":"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","sources":["node_modules/regenerator-runtime/runtime.js","src/shared/sources.json","src/shared/enums.js","src/shared/challenge-log.js","src/modals/challenge.js"],"sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","{ \"data\": [\n    {\n        \"name\": \"Principles of Green Software Engineering\",\n        \"src\": \"https://principles.green/\",\n        \"pledges\": [\n            {\n                \"id\": 1,\n                \"text\": \"carbon efficient\"\n            },            \n            {\n                \"id\": 2,\n                \"text\": \"energy efficient\"\n            }    \n        ],\n        \"reasons\": {\n            \"positive\": [\n                {\n                    \"id\": 1,\n                    \"text\": \"efficient\"\n                },\n                {\n                    \"id\": 2,\n                    \"text\": \"low intensity\"\n                }                \n            ],\n            \"negative\": [\n                {\n                    \"id\": 1,\n                    \"text\": \"inefficient\"\n                },                \n                {\n                    \"id\": 2,\n                    \"text\": \"high intensity\"\n                }                \n            ]\n        },\n        \"selected\": false\n    },\n    {\n        \"name\": \"Sustainable Web Manifesto\",\n        \"src\": \"https://www.sustainablewebmanifesto.com/\",\n        \"pledges\": [\n            {\n                \"id\": 1,\n                \"text\": \"clean\"\n            },            \n            {\n                \"id\": 2,\n                \"text\": \"efficient\"\n            },    \n            {\n                \"id\": 3,\n                \"text\": \"open\"\n            },\n            {\n                \"id\": 4,\n                \"text\": \"honest\"\n            },\n            {\n                \"id\": 5,\n                \"text\": \"regenerative\"\n            },\n            {\n                \"id\": 6,\n                \"text\": \"resilient\"\n            }\n        ],\n        \"reasons\": {\n            \"positive\": [\n                {\n                    \"id\": 1,\n                    \"text\": \"supportive\"\n                },\n                {\n                    \"id\": 2,\n                    \"text\": \"collaborative\"\n                },      \n                {\n                    \"id\": 3,\n                    \"text\": \"fast\"\n                }      \n            ],\n            \"negative\": [\n                {\n                    \"id\": 1,\n                    \"text\": \"obstructive\"\n                },                \n                {\n                    \"id\": 2,\n                    \"text\": \"opaque\"\n                },                \n                {\n                    \"id\": 3,\n                    \"text\": \"slow\"\n                }           \n            ]\n        },\n        \"selected\": false\n    },\n    {\n        \"name\": \"Challenge Toolbox Prototype\",\n        \"src\": \"https://www.figma.com/file/E7ZOq83wqAE6ABfoIXnnVm/Challenge-Toolbox-Prototype?node-'id'=3%3A111\",\n        \"pledges\": [\n            {\n                \"id\": 1,\n                \"text\": \"respect people\"\n            },\n            {\n                \"id\": 2,\n                \"text\": \"protect against abuse\"\n            },\n            {\n                \"id\": 3,\n                \"text\": \"make accessible tech\"\n            },\n            {\n                \"id\": 4,\n                \"text\": \"consider social impacts\"\n            }\n        ],\n        \"reasons\": {\n            \"positive\": [\n                {\n                    \"id\": 1,\n                    \"text\": \"improves well-being\"\n                },                \n                {\n                    \"id\": 2,\n                    \"text\": \"improves privacy\"\n                }            \n            ],\n            \"negative\": [\n                {\n                    \"id\": 1,\n                    \"text\": \"annoying\"\n                },                \n                {\n                    \"id\": 2,\n                    \"text\": \"misleading\"\n                }                \n            ]\n        },\n        \"selected\": true\n    }\n]}","const Scope = Object.freeze({\n    Board: 'board',\n    Member: 'member',\n    Card: 'card',\n    Organization: 'organization'\n});\n\nconst Type = Object.freeze({\n    Challenge: 'challenge',\n    Celebrate: 'celebrate'\n});\n\nconst Visibility = Object.freeze({\n    Shared: 'shared',\n    Private: 'private'\n});\n\nconst Key = Object.freeze({\n    LogEntries: 'Log entries'\n});\n\nconst Capability = Object.freeze({\n    CardBadges: 'card-badges',\n    CardButtons: 'card-buttons',\n    CardDetailBadges: 'card-detail-badges'\n});\n\nconst Condition = Object.freeze({\n    Admin: 'admin',\n    Edit: 'edit',\n    ReadOnly: 'readOnly',\n    SignedIn: 'signedIn',\n    SignedOut: 'signedOut',\n    Always: 'always'\n});\n\nconst enums = {\n    Scope,\n    Type,\n    Visibility,\n    Key,\n    Capability,\n    Condition\n};\n\nexport default enums;","import enums from '../shared/enums';\n\nexport class ChallengeLog {\n\n    constructor(type) {\n      this.type = type;\n      this.log = [];\n      this.currentPledge = {};\n      this.context = {};\n      this.currentReason = {};\n    }\n\n    // private \n    islogTruthy(val) {\n        return (val !== null && val !== undefined && val !== [] && Object.entries(val).length > 0 || typeof(val) === 'number' );\n    }\n\n    // private \n    islogFalsy(val) {\n        return !this.islogTruthy(val);\n    }\n\n    // public \n    isLogEmpty() {\n        return this.log === [];\n    }\n  \n    // public\n    getLog() {\n        return this.log;\n    }\n  \n    // public\n    setLog(log) {\n        this.log = log;\n        return this.log;\n    }\n  \n    // public\n    setType(type) {\n        this.type = type;\n        return this.type;\n    }\n\n    // public\n    getCurrentPledge() {\n        return this.currentPledge;\n    }\n\n    // private\n    addPledgeToLog() {\n        this.log.push({\n                type: this.type,\n                board: this.context.board,\n                member: this.context.member,\n                card: this.context.card,\n                pledge: {\n                    id: this.currentPledge.id,\n                    text: this.currentPledge.text,\n                    reasons: []\n                },                \n            })\n            return { isPledgeNowLogged: true, updatedPledges: this.log.map(entry => entry.pledge).filter(entry => entry.type === this.type) };\n    };\n    \n    // private\n    removePledgeFromLog() {\n        if(this.isLogEmpty()) return { isPledgeNowLogged: false, updatedPledges: [] };\n        if(this.getReasonsForCurrentPledge(this.currentPledge).length > 0) {\n            return { isPledgeNowLogged: false, updatedPledges: this.log.map(entry => entry.pledge) };\n        }\n        this.log = this.log.filter(entry => entry.pledge.id !== this.currentPledge.id && entry.type === this.type);\n        return { isPledgeNowLogged: false, updatedPledges: this.log.map(entry => entry.pledge).filter(entry => entry.type === this.type) };\n    }\n\n    // public\n    togglePledge(context, pledge) {\n\n        this.currentPledge = pledge;\n        this.context = context;\n        \n        const isPledgeLogged = this.isLogEmpty() ? false : this.islogTruthy(this.log.find(entry => entry.pledge.id === pledge.id && entry.type === this.type));\n\n        const { isPledgeNowLogged, updatedPledges } = isPledgeLogged\n            ? this.removePledgeFromLog()\n            : this.addPledgeToLog();\n\n        return { isPledgeNowLogged, updatedPledges };\n    }\n\n    // public\n    getLoggedPledges() {\n        return this.log.map(entry => entry.pledge);\n    }\n\n    // public \n    getReasonsForCurrentPledge() {\n        if(this.islogFalsy(this.currentPledge) || this.isLogEmpty()) return [];\n        const reasons = this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons;\n        return reasons === undefined ? [] : reasons;\n    }\n\n    // private \n    addReasonToPledge() {\n        const reasons = [ ...this.getReasonsForCurrentPledge(), this.currentReason ];\n        const updatedReasons = [ ...this.getReasonsForCurrentPledge(), this.currentReason ];\n        this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons = reasons;\n        return { isReasonNowLogged: true, updatedReasons };\n    }\n\n    // private\n    removeReasonFromPledge() {        \n        this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons = this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons.filter(r => r.id !== this.currentReason.id);\n        return { isReasonNowLogged: false, updatedReasons: this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons };\n    }\n\n    // public\n    toggleReason(reason) {\n\n        if(this.currentPledge === {}) return;\n\n        this.currentReason = reason;\n\n        const isPledgeLogged = !!this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type);\n        const isReasonLogged = isPledgeLogged && !!this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type && entry.pledge.reasons.find(r => r.id === reason.id));\n\n        const { isReasonNowLogged, updatedReasons } = isReasonLogged \n            ? this.removeReasonFromPledge()\n            : this.addReasonToPledge();\n\n        return { isReasonNowLogged, updatedReasons };\n    }\n\n    // public\n    getReasonsCount() {\n        const entry = this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type);\n        const reasons = entry !== undefined ? entry.pledge.reasons ? entry.pledge.reasons : [] : [];\n        const reasonCount = reasons.length > 0 ? reasons.length : 0;\n        return reasonCount === 0 ? '' : reasonCount.toString();\n    }\n\n    // public\n    getReasonsCountByPledge(pledgeId) {\n        const entry = this.log.find(entry => entry.pledge.id === pledgeId && entry.type === this.type);\n        const reasons = entry !== undefined ? entry.pledge.reasons ? entry.pledge.reasons : [] : [];\n        const reasonCount = reasons.length > 0 ? reasons.length : 0;\n        return reasonCount === 0 ? '' : reasonCount.toString();\n    }\n\n    // public static\n    static getButtonText(type, count) {\n     \n        let text = '';\n\n        switch(type) {\n            case enums.Type.Challenge:\n                text = count > 0\n                    ? `Challenges (${count})`\n                    : `Challenge`;\n                    break;\n            case enums.Type.Celebrate:\n                text = count > 0\n                    ? `Celebrations (${count})`\n                    : `Celebrate`;\n                    break;\n        }\n\n        // console.warn('button text: ', text);\n\n        return text;\n    }\n\n    // public static\n    static getChallengeBadgeCounts(context, log) {\n\n        if(log === undefined) {\n            return { challenges: 0, celebrations: 0 };\n        }\n\n        const card = context.card;\n        const cardChallengeCount = [ ...new Set(log.filter(e => e.type === enums.Type.Challenge && e.card === card).map(e => e.member)) ].length;\n        const cardCelebrationCount = [ ...new Set(log.filter(e => e.type === enums.Type.Celebrate && e.card === card).map(e => e.member)) ].length;\n\n        return {\n            challenges: cardChallengeCount,\n            celebrations: cardCelebrationCount\n        }\n    }\n\n    static getChallengePledgeCounts(context, log) {\n\n        if(log === undefined) {\n            return { challenges: 0, celebrations: 0 };\n        }\n\n        const card = context.card;\n        const cardChallengeCount = log.filter(entry => entry.type === enums.Type.Challenge && entry.card === card).length;\n        const cardCelebrationCount = log.filter(entry => entry.type === enums.Type.Celebrate && entry.card === card).length;\n\n        return {\n            challenges: cardChallengeCount,\n            celebrations: cardCelebrationCount\n        }\n    }\n}","import regeneratorRuntime from \"regenerator-runtime\";\nimport sources from '../shared/sources.json';\nimport enums from '../shared/enums';\nimport { ChallengeLog } from '../shared/challenge-log';\n\nconst init = async () => {\n\n    const isLive = document.referrer === 'https://trello.com/';\n\n    console.log('isLive: ', isLive);\n\n    const pledges = sources.data.find(s => s.selected).pledges;\n\n    const pledgesContainer = document.getElementById('pledges');\n    const reasonsContainer = document.getElementById('reasons');\n\n    document.getElementById('src').href = sources.data.find(s => s.selected).src;\n\n    const scope = enums.Scope.Card;\n    const visibility = enums.Visibility.Shared;\n    const key = enums.Key.LogEntries;\n    const capability = enums.Capability.CardButtons;\n\n    let type, t, log;\n\n    if(isLive) {\n\n        t = window.TrelloPowerUp.iframe();\n        log = await t.get(scope, visibility, key);\n        type = t.arg('type');\n\n        console.log(`Data stored for ${key} against ${scope} with ${visibility} access for ${capability}  : `,  log);    \n\n    } else {\n        type = enums.Type.Challenge;\n    }\n\n    const challengeLog = new ChallengeLog(type);\n\n    const reasons = type === enums.Type.Challenge\n        ? sources.data.find(s => s.selected).reasons.negative\n        : sources.data.find(s => s.selected).reasons.positive;\n\n    if(log && log !== undefined) {\n        const updatedLogFromTrello = challengeLog.setLog(log);\n        console.log('set log with log from t: ', challengeLog.setLog(updatedLogFromTrello));   \n    }\n\n    const showSelectedPledges = (pledges, currentPledge) => {\n\n        pledgesContainer.querySelectorAll('.btn').forEach(btn => {\n\n            btn.classList.remove('selected');\n            \n            pledges.forEach(pledge => {\n                if (parseInt(currentPledge.id) === parseInt(btn.id)) {\n                    btn.classList.add('selected');\n                }\n            });\n\n            if (parseInt(currentPledge.id) === parseInt(btn.id)) {\n                btn.classList.add('selected');\n            }\n        });\n    };\n\n    const clickPledgeHandler = (e, pledgeId) => {\n        \n        const context = isLive ? t.getContext() : {\n            board: 'board #1',\n            member: 'member #1',\n            card: 'card #1',\n        };\n\n        const pledge = pledges.find(p => parseInt(p.id) === parseInt(pledgeId));\n\n        const { isPledgeNowLogged, updatedPledges } = challengeLog.togglePledge(context, pledge); \n\n        showSelectedPledges(updatedPledges, pledge);\n        redrawChallengeReasons();\n        showSelectedReasons(challengeLog.getReasonsForCurrentPledge());\n    };\n\n    const showSelectedReasons = reasons => {\n\n        // console.log(JSON.stringify(challengeLog.getCurrentPledge(), null, 2));\n\n        reasonsContainer.querySelectorAll('.btn').forEach(btn => {\n\n            btn.classList.remove('selected');\n\n            if(reasons === []) return;\n\n            reasons.forEach(reason => {\n                if (parseInt(reason.id) === parseInt(btn.id)) {\n                    btn.classList.add('selected');\n                } else {\n                    if (reasons.filter(sb => parseInt(sb.id) === parseInt(btn.id)) === []) {\n                        btn.classList.remove('selected');\n                    }\n                }\n            });\n        });\n    };\n\n    const clickReasonHandler = (e, reasonId) => {\n\n        const reason = reasons.find(r => parseInt(r.id) === parseInt(reasonId));\n\n        const { isReasonNowLogged, updatedReasons } = challengeLog.toggleReason(reason);\n\n        showSelectedReasons(updatedReasons);\n\n        redrawChallengePledges();\n    };\n\n    const redrawChallengePledges = () => {\n\n        const pledgeItems = pledges.map(pledge => {\n        \n            const reasonCount = challengeLog.getReasonsCountByPledge(pledge.id);\n\n            const classList = type === enums.Type.Challenge ? 'btnChallenge' : 'btnCelebrate';\n\n            return `<li>\n                        <button id=\"${pledge.id}\" class=\"btn ${classList}\">${pledge.text}<span class=\"counter\">${reasonCount}</span></button>\n                    </li>`;\n        });\n\n        pledgesContainer.innerHTML = pledgeItems.join('');\n\n        pledgesContainer.querySelectorAll('.btn').forEach(btn => {\n            btn.addEventListener('click', e => clickPledgeHandler(e, btn.id));\n        });\n\n        showSelectedPledges(challengeLog.getLoggedPledges(), challengeLog.getCurrentPledge());\n    };\n\n    redrawChallengePledges();\n\n    const redrawChallengeReasons = () => {\n\n        const reasonItems = reasons.map(reason => {\n            return `<li>\n                        <button id=\"${reason.id}\" class=\"btn btnReason\">${reason.text}</button>\n                    </li>`;\n        });\n        \n        reasonsContainer.innerHTML = reasonItems.join('');\n\n        reasonsContainer.querySelectorAll('.btn').forEach(btn => {\n            btn.addEventListener('click', e => clickReasonHandler(e, btn.id));\n        });\n\n        showSelectedReasons(challengeLog.getReasonsForCurrentPledge());\n    };\n\n    redrawChallengeReasons();\n\n    const submitButton = document.getElementById('submit');\n\n    submitButton.addEventListener('click', async e => {\n\n        if(!isLive) return;\n        \n        const value = challengeLog.getLog();\n\n        await t.set(scope, visibility, key, value);\n\n        const response = await t.get(scope, visibility, key);\n\n        console.log('returned save object: ',  response);\n\n        await t.notifyParent('done');\n\n        return t.closeModal();\n\n    });\n};\n\ninit();\n"],"names":["$87891cba7e6336b8$var$runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","$d21f854afd0d98a0$exports","JSON","parse","$6255d2bfcd4f8810$export$2e2bcd8739ae039","freeze","Board","Member","Card","Organization","Challenge","Celebrate","Shared","Private","LogEntries","CardBadges","CardButtons","CardDetailBadges","Admin","Edit","ReadOnly","SignedIn","SignedOut","Always","$070c272ef4086d70$export$576bb4a7c9d16b85","log","currentPledge","currentReason","islogTruthy","val","entries","islogFalsy","isLogEmpty","getLog","setLog","setType","getCurrentPledge","addPledgeToLog","board","member","card","pledge","id","text","reasons","isPledgeNowLogged","updatedPledges","map","filter","removePledgeFromLog","getReasonsForCurrentPledge","togglePledge","isPledgeLogged","find","getLoggedPledges","addReasonToPledge","updatedReasons","isReasonNowLogged","removeReasonFromPledge","r","toggleReason","reason","isReasonLogged","getReasonsCount","reasonCount","toString","getReasonsCountByPledge","pledgeId","count","Type","challenges","celebrations","Set","e","isLive","document","referrer","console","pledges","$parcel$interopDefault","data","s","selected","pledgesContainer","getElementById","reasonsContainer","href","src","scope","Scope","visibility","Visibility","Key","capability","Capability","t","window","TrelloPowerUp","iframe","get","challengeLog","negative","positive","updatedLogFromTrello","showSelectedPledges","querySelectorAll","btn","classList","remove","parseInt","add","showSelectedReasons","sb","redrawChallengePledges","pledgeItems","innerHTML","join","addEventListener","getContext","p","redrawChallengeReasons","clickPledgeHandler","reasonItems","reasonId","clickReasonHandler","set","response","notifyParent"],"version":3,"file":"challenge.7556668f.js.map"}