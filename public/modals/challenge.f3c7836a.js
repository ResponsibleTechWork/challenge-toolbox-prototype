function e(e){return e&&e.__esModule?e.default:e}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},s={},i=t.parcelRequire0e29;null==i&&((i=function(e){if(e in n)return n[e].exports;if(e in s){var t=s[e];delete s[e];var i={id:e,exports:{}};return n[e]=i,t.call(i.exports,i,i.exports),i.exports}var o=new Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,t){s[e]=t},t.parcelRequire0e29=i),i("bDs4w");var o;o=JSON.parse('{"data":[{"name":"Principles of Green Software Engineering","src":"https://principles.green/","pledges":[{"id":1,"text":"carbon efficient"},{"id":2,"text":"energy efficient"}],"reasons":{"positive":[{"id":1,"text":"efficient"},{"id":2,"text":"low intensity"}],"negative":[{"id":1,"text":"inefficient"},{"id":2,"text":"high intensity"}]},"selected":false},{"name":"Sustainable Web Manifesto","src":"https://www.sustainablewebmanifesto.com/","pledges":[{"id":1,"text":"clean"},{"id":2,"text":"efficient"},{"id":3,"text":"open"},{"id":4,"text":"honest"},{"id":5,"text":"regenerative"},{"id":6,"text":"resilient"}],"reasons":{"positive":[{"id":1,"text":"supportive"},{"id":2,"text":"collaborative"},{"id":3,"text":"fast"}],"negative":[{"id":1,"text":"obstructive"},{"id":2,"text":"opaque"},{"id":3,"text":"slow"}]},"selected":false},{"name":"Challenge Toolbox Prototype","src":"https://www.figma.com/file/E7ZOq83wqAE6ABfoIXnnVm/Challenge-Toolbox-Prototype?node-\'id\'=3%3A111","pledges":[{"id":1,"text":"respect people"},{"id":2,"text":"protect against abuse"},{"id":3,"text":"make accessible tech"},{"id":4,"text":"consider social impacts"}],"reasons":{"positive":[{"id":1,"text":"improves well-being"},{"id":2,"text":"improves privacy"}],"negative":[{"id":1,"text":"annoying"},{"id":2,"text":"misleading"}]},"selected":true}]}');var a=i("LdkDU"),d=i("BvQ1f");(async()=>{const t="https://trello.com/"===document.referrer;console.log("isLive: ",t);const n=e(o).data.find((e=>e.selected)).pledges,s=document.getElementById("pledges"),i=document.getElementById("reasons");document.getElementById("src").href=e(o).data.find((e=>e.selected)).src;const l=a.default.Scope.Card,r=a.default.Visibility.Shared,c=a.default.Key.LogEntries,g=a.default.Capability.CardButtons;let f,p,u;t?(p=window.TrelloPowerUp.iframe(),u=await p.get(l,r,c),f=p.arg("type"),console.log(`Data stored for ${c} against ${l} with ${r} access for ${g}  : `,u)):f=a.default.Type.Challenge;const b=new d.default(f),m=f===a.default.Type.Challenge?e(o).data.find((e=>e.selected)).reasons.negative:e(o).data.find((e=>e.selected)).reasons.positive;if(u&&void 0!==u){const e=b.setLog(u);console.log("set log with log from t: ",b.setLog(e))}const x=(e,t)=>{s.querySelectorAll(".btn").forEach((n=>{n.classList.remove("selected"),e.forEach((e=>{parseInt(t.id)===parseInt(n.id)&&n.classList.add("selected")})),parseInt(t.id)===parseInt(n.id)&&n.classList.add("selected")}))},v=e=>{i.querySelectorAll(".btn").forEach((t=>{t.classList.remove("selected"),e!==[]&&e.forEach((n=>{parseInt(n.id)===parseInt(t.id)?t.classList.add("selected"):e.filter((e=>parseInt(e.id)===parseInt(t.id)))===[]&&t.classList.remove("selected")}))}))},w=()=>{const e=n.map((e=>{const t=b.getReasonsCountByPledge(e.id),n=f===a.default.Type.Challenge?"btnChallenge":"btnCelebrate";return`<li>\n                        <button id="${e.id}" class="btn ${n}">${e.text}<span class="counter">${t}</span></button>\n                    </li>`}));s.innerHTML=e.join(""),s.querySelectorAll(".btn").forEach((e=>{e.addEventListener("click",(s=>((e,s)=>{const i=t?p.getContext():{board:"board #1",member:"member #1",card:"card #1"},o=n.find((e=>parseInt(e.id)===parseInt(s))),{isPledgeNowLogged:a,updatedPledges:d}=b.togglePledge(i,o);x(d,o),y(),v(b.getReasonsForCurrentPledge())})(0,e.id)))})),x(b.getLoggedPledges(),b.getCurrentPledge())};w();const y=()=>{const e=m.map((e=>`<li>\n                        <button id="${e.id}" class="btn btnReason">${e.text}</button>\n                    </li>`));i.innerHTML=e.join(""),i.querySelectorAll(".btn").forEach((e=>{e.addEventListener("click",(t=>((e,t)=>{const n=m.find((e=>parseInt(e.id)===parseInt(t))),{isReasonNowLogged:s,updatedReasons:i}=b.toggleReason(n);v(i),w()})(0,e.id)))})),v(b.getReasonsForCurrentPledge())};y();document.getElementById("submit").addEventListener("click",(async e=>{if(!t)return;const n=b.getLog();await p.set(l,r,c,n);const s=await p.get(l,r,c);return console.log("returned save object: ",s),await p.notifyParent("done"),p.closeModal()}))})();
//# sourceMappingURL=challenge.f3c7836a.js.map
