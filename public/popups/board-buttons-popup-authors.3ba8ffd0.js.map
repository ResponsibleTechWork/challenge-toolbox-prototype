{"mappings":"siBAAAA,EAAiBC,KAAKC,MAAM,ybCIlBC,WAEN,MAAMC,EAA+B,wBAAtBC,SAASC,SAExB,IAAIC,EAAGC,EAIJJ,GACCG,EAAIE,OAAOC,cAAcC,SACzBH,QAAcD,EAAEK,IAAIC,EAAAC,QAAYC,MAAMC,MAAOH,EAAAC,QAAYG,WAAWC,OAAQL,EAAAC,QAAYK,IAAIC,uBAG5FZ,EAAQ,CACJa,GAAI,UACJC,KAAM,UACNC,MAAO,6BAIf,MAAMC,EAAanB,SAASoB,eAAe,WAE3C,IAAIC,EAAiBC,EAAA3B,GAAK4B,QAAQC,MAAKC,GAAKA,EAAET,KAAOb,EAAMa,KAE3D,MAkBMU,EAAiB,KAEnB,MAAMH,EAAUD,EAAA3B,GAAK4B,QAAQI,KAAIF,GAEvB,6CAGTA,EAAAT,gCAAAS,EAAAT,KAAAK,EAAAL,GAAA,WAAA,SAAAS,EAAAP,uDAKOU,UAAAL,EAAwBM,KAAG,4CAClCC,EAAAC,iBAAA,SAAAC,GA/BalC,OAAUkC,EAAGhB,KAE3B,IAAIjB,EAAQ,OAAOkC,QAAQC,IAAIlB,GAE/BK,EAAiBC,EAAA3B,GAAK4B,QAAQC,MAAKC,GAAKA,EAAET,KAAOA,IAEjD,MAAMmB,EAAQ3B,EAAAC,QAAYC,MAAMC,MAC1ByB,EAAa5B,EAAAC,QAAYG,WAAWC,OACpCwB,EAAM7B,EAAAC,QAAYK,IAAIC,2BAEtBb,EAAEoC,IAAIH,EAAOC,EAAYC,EAAKhB,GACpC,MAAMkB,QAAiBrC,EAAEK,IAAI4B,EAAOC,EAAYC,GAEhDJ,QAAQC,IAAI,wBAA0BK,GAEtCb,KAgBCc,CAAAR,EAAAF,EAAAd,UAMTU","sources":["src/api/data/authors.json","src/popups/board-buttons-popup-authors.js"],"sourcesContent":["{\n    \"authors\": [\n        {\n            \"id\": \"rtw\",\n            \"name\": \"ResponsibleTech.Work\",\n            \"title\": \"ResponsibleTech.Work Pledges\"\n        },\n        {\n            \"id\": \"spotify\",\n            \"name\": \"Spotify\",\n            \"title\": \"Spotify Ethics Assessment\"\n        },\n        {\n            \"id\": \"swm\",\n            \"name\": \"Sustainable Web Manifesto\",\n            \"title\": \"Sustainable Web Manifesto\"\n        },\n        {\n            \"id\": \"pg\",\n            \"name\": \"Principles.Green\",\n            \"title\": \"Principles of Software Engineering\"\n        },\n        {\n            \"id\": \"princeton\",\n            \"name\": \"Princeton web transparency\",\n            \"title\": \"Dark Patterns at Scale\"\n        }\n    ]\n}","import regeneratorRuntime from \"regenerator-runtime\";\nimport data from '../api/data/authors.json';\nimport trelloEnums from '../shared/trello-enums';\n\nconst init = async () => {\n\n    const isLive = document.referrer === 'https://trello.com/';\n\n    let t, prefs;\n\n    // console.log('isLive: ', isLive);\n\n    if(isLive) {\n        t = window.TrelloPowerUp.iframe();\n        prefs = await t.get(trelloEnums.Scope.Board, trelloEnums.Visibility.Shared, trelloEnums.Key.ChallengePreferences);\n        // console.log('prefs: ', prefs);\n    } else {\n        prefs = {\n            id: \"spotify\",\n            name: \"Spotify\",\n            title: \"Spotify Ethics Assessment\"\n        };\n    }\n\n    const authorList = document.getElementById('authors');\n\n    let selectedAuthor = data.authors.find(a => a.id === prefs.id);\n\n    const selectAuthor = async (e, id) => {\n\n        if(!isLive) return console.log(id);\n\n        selectedAuthor = data.authors.find(a => a.id === id);\n\n        const scope = trelloEnums.Scope.Board;\n        const visibility = trelloEnums.Visibility.Shared;\n        const key = trelloEnums.Key.ChallengePreferences;\n\n        await t.set(scope, visibility, key, selectedAuthor);\n        const response = await t.get(scope, visibility, key);\n        \n        console.log('return saved author: ',  response);\n\n        renderAuthorsList();\n    };\n        \n    const renderAuthorsList = () => {\n\n        const authors = data.authors.map(a => {\n\n            return `<li>\n                        <button id=\"${a.id}\" class=\"btn\"><span class=\"${a.id === selectedAuthor.id ? 'selected' : null}\">${a.title}</span></button>\n                    </li>`;\n        });\n    \n        authorList.innerHTML = authors.join('');\n    \n        authorList.querySelectorAll('.btn').forEach(btn => {\n            btn.addEventListener('click', e => selectAuthor(e, btn.id));\n        });\n    };\n\n    renderAuthorsList();\n};\n\ninit();"],"names":["$f50b6bdb824df028$exports","JSON","parse","async","isLive","document","referrer","t","prefs","window","TrelloPowerUp","iframe","get","$LdkDU","default","Scope","Board","Visibility","Shared","Key","ChallengePreferences","id","name","title","authorList","getElementById","selectedAuthor","$parcel$interopDefault","authors","find","a","renderAuthorsList","map","innerHTML","join","btn","addEventListener","e","console","log","scope","visibility","key","set","response","selectAuthor"],"version":3,"file":"board-buttons-popup-authors.3ba8ffd0.js.map"}