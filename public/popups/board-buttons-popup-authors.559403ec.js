function e(e){return e&&e.__esModule?e.default:e}var t="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},n={},i={},a=t.parcelRequire0e29;null==a&&((a=function(e){if(e in n)return n[e].exports;if(e in i){var t=i[e];delete i[e];var a={id:e,exports:{}};return n[e]=a,t.call(a.exports,a,a.exports),a.exports}var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}).register=function(e,t){i[e]=t},t.parcelRequire0e29=a),a("bDs4w");var r;r=JSON.parse('{"authors":[{"id":"rtw","name":"ResponsibleTech.Work","title":"ResponsibleTech.Work Pledges"},{"id":"spotify","name":"Spotify","title":"Spotify Ethics Assessment"},{"id":"swm","name":"Sustainable Web Manifesto","title":"Sustainable Web Manifesto"},{"id":"pg","name":"Principles.Green","title":"Principles of Software Engineering"},{"id":"princeton","name":"Princeton web transparency","title":"Dark Patterns at Scale"}]}');var o={Scope:Object.freeze({Board:"board",Member:"member",Card:"card",Organization:"organization"}),Type:Object.freeze({Challenge:"challenge",Celebrate:"celebrate"}),Visibility:Object.freeze({Shared:"shared",Private:"private"}),Key:Object.freeze({LogEntries:"Log entries",ChallengePreferences:"Challenge preferences"}),Capability:Object.freeze({BoardButtons:"board-buttons",CardBadges:"card-badges",CardButtons:"card-buttons",CardDetailBadges:"card-detail-badges",CardBackSection:"card-back-section"}),Condition:Object.freeze({Admin:"admin",Edit:"edit",ReadOnly:"readOnly",SignedIn:"signedIn",SignedOut:"signedOut",Always:"always"}),Mode:Object.freeze({Label:"label",Popup:"popup",Modal:"modal"})};(async()=>{const t="https://trello.com/"===document.referrer;let n,i;t?(n=window.TrelloPowerUp.iframe(),i=await n.get(o.Scope.Board,o.Visibility.Shared,o.Key.ChallengePreferences)):i={id:"spotify",name:"Spotify",title:"Spotify Ethics Assessment"};const a=document.getElementById("authors");let s=e(r).authors.find((e=>e.id===i.id));const l=()=>{const i=e(r).authors.map((e=>`<li>\n                        <button id="${e.id}" class="btn"><span class="${e.id===s.id?"selected":null}">${e.title}</span></button>\n                    </li>`));a.innerHTML=i.join(""),a.querySelectorAll(".btn").forEach((i=>{i.addEventListener("click",(a=>(async(i,a)=>{if(!t)return console.log(a);s=e(r).authors.find((e=>e.id===a));const d=o.Scope.Board,c=o.Visibility.Shared,f=o.Key.ChallengePreferences;await n.set(d,c,f,s),await n.get(d,c,f),l()})(0,i.id)))}))};l()})();
//# sourceMappingURL=board-buttons-popup-authors.559403ec.js.map
