{"mappings":"siBAAAA,EAAiBC,KAAKC,MAAM,4aCuD5BC,EAVoB,OA7CNC,OAAOC,OAAO,CACxBC,MAAO,QACPC,OAAQ,SACRC,KAAM,OACNC,aAAc,sBAGLL,OAAOC,OAAO,CACvBK,UAAW,YACXC,UAAW,yBAGIP,OAAOC,OAAO,CAC7BO,OAAQ,SACRC,QAAS,gBAGDT,OAAOC,OAAO,CACtBS,WAAY,cACZC,qBAAsB,qCAGPX,OAAOC,OAAO,CAC7BW,aAAc,gBACdC,WAAY,cACZC,YAAa,eACbC,iBAAkB,qBAClBC,gBAAiB,gCAGHhB,OAAOC,OAAO,CAC5BgB,MAAO,QACPC,KAAM,OACNC,SAAU,WACVC,SAAU,WACVC,UAAW,YACXC,OAAQ,gBAGCtB,OAAOC,OAAO,CACvBsB,MAAO,QACPC,MAAO,QACPC,MAAO,WCtCDC,WAEN,MAAMC,EAA+B,wBAAtBC,SAASC,SAExB,IAAIC,EAAGC,EAEJJ,GACCG,EAAIE,OAAOC,cAAcC,SACzBH,QAAcD,EAAEK,IAAIpC,EAAYqC,MAAMlC,MAAOH,EAAYsC,WAAW7B,OAAQT,EAAYuC,IAAI3B,uBAE5FoB,EAAQ,CACJQ,GAAI,UACJC,KAAM,UACNC,MAAO,6BAIf,MAAMC,EAAad,SAASe,eAAe,WAE3C,IAAIC,EAAiBC,EAAAjD,GAAKkD,QAAQC,MAAKC,GAAKA,EAAET,KAAOR,EAAMQ,KAE3D,MAmBMU,EAAiB,KAEnB,MAAMH,EAAUD,EAAAjD,GAAKkD,QAAQI,KAAIF,GAEvB,0DACoBA,EAAET,gCAAgCS,EAAET,KAAOK,EAAeL,GAAK,WAAa,wBAAwBS,EAAEP,8CAIpIC,EAAWS,UAAYL,EAAQM,KAAK,IAEpCV,EAAWW,iBAAiB,QAAQC,SAAQC,IACxCA,EAAIC,iBAAiB,SAASC,GA/BpB/B,OAAU+B,EAAGlB,KAI3B,GAFAK,EAAiBC,EAAAjD,GAAKkD,QAAQC,MAAKC,GAAKA,EAAET,KAAOA,KAE7CZ,EAEA,YADAsB,IAIJ,MAAMS,EAAQ3D,EAAYqC,MAAMlC,MAC1ByD,EAAa5D,EAAYsC,WAAW7B,OACpCoD,EAAM7D,EAAYuC,IAAI3B,2BAEtBmB,EAAE+B,IAAIH,EAAOC,EAAYC,EAAKhB,SACbd,EAAEK,IAAIuB,EAAOC,EAAYC,GAEhDX,KAeuCa,CAAaL,EAAGF,EAAIhB,UAI/DU,KAGJc","sources":["src/api/data/authors.json","src/trello-api/trello-enums.js","src/popups/board-buttons-popup-authors.js"],"sourcesContent":["{\n    \"authors\": [\n        {\n            \"id\": \"rtw\",\n            \"name\": \"ResponsibleTech.Work\",\n            \"title\": \"ResponsibleTech.Work Pledges\"\n        },\n        {\n            \"id\": \"spotify\",\n            \"name\": \"Spotify\",\n            \"title\": \"Spotify Ethics Assessment\"\n        },\n        {\n            \"id\": \"swm\",\n            \"name\": \"Sustainable Web Manifesto\",\n            \"title\": \"Sustainable Web Manifesto\"\n        },\n        {\n            \"id\": \"pg\",\n            \"name\": \"Principles.Green\",\n            \"title\": \"Principles of Software Engineering\"\n        },\n        {\n            \"id\": \"princeton\",\n            \"name\": \"Princeton web transparency\",\n            \"title\": \"Dark Patterns at Scale\"\n        }\n    ]\n}","const Scope = Object.freeze({\n    Board: 'board',\n    Member: 'member',\n    Card: 'card',\n    Organization: 'organization'\n});\n\nconst Type = Object.freeze({\n    Challenge: 'challenge',\n    Celebrate: 'celebrate'\n});\n\nconst Visibility = Object.freeze({\n    Shared: 'shared',\n    Private: 'private'\n});\n\nconst Key = Object.freeze({\n    LogEntries: 'Log entries',\n    ChallengePreferences: 'Challenge preferences'\n});\n\nconst Capability = Object.freeze({\n    BoardButtons: 'board-buttons',\n    CardBadges: 'card-badges',\n    CardButtons: 'card-buttons',\n    CardDetailBadges: 'card-detail-badges',\n    CardBackSection: 'card-back-section',\n});\n\nconst Condition = Object.freeze({\n    Admin: 'admin',\n    Edit: 'edit',\n    ReadOnly: 'readOnly',\n    SignedIn: 'signedIn',\n    SignedOut: 'signedOut',\n    Always: 'always'\n});\n\nconst Mode = Object.freeze({\n    Label: 'label',\n    Popup: 'popup',\n    Modal: 'modal'\n});\n\nconst trelloEnums = {\n    Scope,\n    Type,\n    Visibility,\n    Key,\n    Capability,\n    Condition,\n    Mode\n};\n\nexport default trelloEnums;","import regeneratorRuntime from \"regenerator-runtime\";\nimport data from '../api/data/authors.json';\nimport trelloEnums from '../trello-api/trello-enums';\n\nconst init = async () => {\n\n    const isLive = document.referrer === 'https://trello.com/';\n\n    let t, prefs;\n\n    if(isLive) {\n        t = window.TrelloPowerUp.iframe();\n        prefs = await t.get(trelloEnums.Scope.Board, trelloEnums.Visibility.Shared, trelloEnums.Key.ChallengePreferences);\n    } else {\n        prefs = {\n            id: \"spotify\",\n            name: \"Spotify\",\n            title: \"Spotify Ethics Assessment\"\n        };\n    }\n\n    const authorList = document.getElementById('authors');\n\n    let selectedAuthor = data.authors.find(a => a.id === prefs.id);\n\n    const selectAuthor = async (e, id) => {\n        \n        selectedAuthor = data.authors.find(a => a.id === id);\n\n        if(!isLive) {\n            renderAuthorsList();\n            return;\n        }\n\n        const scope = trelloEnums.Scope.Board;\n        const visibility = trelloEnums.Visibility.Shared;\n        const key = trelloEnums.Key.ChallengePreferences;\n\n        await t.set(scope, visibility, key, selectedAuthor);\n        const response = await t.get(scope, visibility, key);\n        \n        renderAuthorsList();\n    };\n        \n    const renderAuthorsList = () => {\n\n        const authors = data.authors.map(a => {\n\n            return `<li class=\"list\">\n                        <button id=\"${a.id}\" class=\"btn\"><span class=\"${a.id === selectedAuthor.id ? 'selected' : 'unselected'}\"></span>${a.title}</button>\n                    </li>`;\n        });\n    \n        authorList.innerHTML = authors.join('');\n    \n        authorList.querySelectorAll('.btn').forEach(btn => {\n            btn.addEventListener('click', e => selectAuthor(e, btn.id));\n        });\n    };\n\n    renderAuthorsList();\n};\n\ninit();"],"names":["$f50b6bdb824df028$exports","JSON","parse","$c44f457c0fe3a57f$export$2e2bcd8739ae039","Object","freeze","Board","Member","Card","Organization","Challenge","Celebrate","Shared","Private","LogEntries","ChallengePreferences","BoardButtons","CardBadges","CardButtons","CardDetailBadges","CardBackSection","Admin","Edit","ReadOnly","SignedIn","SignedOut","Always","Label","Popup","Modal","async","isLive","document","referrer","t","prefs","window","TrelloPowerUp","iframe","get","Scope","Visibility","Key","id","name","title","authorList","getElementById","selectedAuthor","$parcel$interopDefault","authors","find","a","renderAuthorsList","map","innerHTML","join","querySelectorAll","forEach","btn","addEventListener","e","scope","visibility","key","set","selectAuthor","$42b54eace291a510$var$init"],"version":3,"file":"board-buttons-popup-authors.46f73b2e.js.map"}