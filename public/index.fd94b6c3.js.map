{"mappings":"imBAsBA,IAAuBA,EACDC,mFArBtB,IAAIC,EAAU,GAoBdF,WAlBkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,WAXiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,qVC+CzDC,EAToB,OAtCNV,OAAOW,OAAO,CACxBC,MAAO,QACPC,OAAQ,SACRC,KAAM,OACNC,aAAc,sBAGLf,OAAOW,OAAO,CACvBK,UAAW,YACXC,UAAW,yBAGIjB,OAAOW,OAAO,CAC7BO,OAAQ,SACRC,QAAS,gBAGDnB,OAAOW,OAAO,CACtBS,WAAY,cACZC,qBAAsB,qCAGPrB,OAAOW,OAAO,CAC7BW,aAAc,gBACdC,WAAY,cACZC,YAAa,eACbC,iBAAkB,iCAGJzB,OAAOW,OAAO,CAC5Be,MAAO,QACPC,KAAM,OACNC,SAAU,WACVC,SAAU,WACVC,UAAW,YACXC,OAAQ,YC7BZ,MAAMC,EAAGC,MAASC,GAaP,CAAC,CACJC,KAAM,oBACNC,SAAUF,GAbED,OAASC,IAErB,MAAMG,QAAcH,EAAEI,IAAI5B,EAAY6B,MAAM3B,MAAOF,EAAY8B,WAAWtB,OAAQR,EAAY+B,IAAIpB,sBAElG,OAAOa,EAAEQ,MAAM,CACXC,MAAO,sBACPC,IAAK,4CACLC,KAAM,CAAEC,OAAQT,MAMLU,CAAWb,GAC1Bc,UAAWtC,EAAYuC,UAAUlB,aC0MzCmB,oBA5NgBC,EAAOzC,EAAY0C,KAAKpC,WAClCqC,KAAKF,KAAOA,EACZE,KAAKC,IAAM,GACXD,KAAKE,cAAgB,GACrBF,KAAKG,QAAU,GACfH,KAAKI,cAAgB,GAIvBC,YAAYC,GACR,OAAQA,MAAAA,GAAqCA,IAAQ,IAAM3D,OAAO4D,QAAQD,GAAKzD,OAAS,GAAqB,iBAATyD,EAIxGE,WAAWF,GACP,OAAQN,KAAKK,YAAYC,GAI7BG,aACI,OAAOT,KAAKC,MAAQ,GAIxBS,SACI,OAAOV,KAAKC,IAIhBU,OAAOV,GAEH,OADAD,KAAKC,IAAMA,EACJD,KAAKC,IAIhBW,QAAQd,GAEJ,OADAE,KAAKF,KAAOA,EACLE,KAAKF,KAIhBe,mBACI,OAAOb,KAAKE,cAIhBY,iBAYQ,OAXJd,KAAKC,IAAIc,KAAK,CACNjB,KAAME,KAAKF,KACXkB,MAAOhB,KAAKG,QAAQa,MACpBC,OAAQjB,KAAKG,QAAQc,OACrBC,KAAMlB,KAAKG,QAAQe,KACnBC,OAAQ,CACJrE,GAAIkD,KAAKE,cAAcpD,GACvBgC,KAAMkB,KAAKE,cAAcpB,KACzBsC,QAAS,MAGV,CAAEC,mBAAmB,EAAMC,eAAgBtB,KAAKC,IAAIsB,KAAIC,GAASA,EAAML,SAAQM,QAAOD,GAASA,EAAM1B,OAASE,KAAKF,QAIlI4B,sBACI,OAAG1B,KAAKS,aAAqB,CAAEY,mBAAmB,EAAOC,eAAgB,IACtEtB,KAAK2B,2BAA2B3B,KAAKE,eAAerD,OAAS,EACrD,CAAEwE,mBAAmB,EAAOC,eAAgBtB,KAAKC,IAAIsB,KAAIC,GAASA,EAAML,WAEnFnB,KAAKC,IAAMD,KAAKC,IAAIwB,QAAOD,GAASA,EAAML,OAAOrE,KAAOkD,KAAKE,cAAcpD,IAAM0E,EAAM1B,OAASE,KAAKF,OAC9F,CAAEuB,mBAAmB,EAAOC,eAAgBtB,KAAKC,IAAIsB,KAAIC,GAASA,EAAML,SAAQM,QAAOD,GAASA,EAAM1B,OAASE,KAAKF,SAI/H8B,aAAazB,EAASgB,GAElBnB,KAAKE,cAAgBiB,EACrBnB,KAAKG,QAAUA,EAEf,MAAM0B,GAAiB7B,KAAKS,cAAuBT,KAAKK,YAAYL,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAOqE,EAAOrE,IAAM0E,EAAM1B,OAASE,KAAKF,SAEzIuB,kBAACA,EAAiBC,eAAEA,GAAmBO,EACxC7B,KAAK0B,sBACL1B,KAAKc,iBAEX,MAAO,mBAAEO,iBAAmBC,GAIhCS,mBACI,OAAO/B,KAAKC,IAAIsB,KAAIC,GAASA,EAAML,SAIvCQ,6BACI,GAAG3B,KAAKQ,WAAWR,KAAKE,gBAAkBF,KAAKS,aAAc,MAAO,GACpE,MAAMW,EAAUpB,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAOkD,KAAKE,cAAcpD,IAAM0E,EAAM1B,OAASE,KAAKF,OAAMqB,OAAOC,QACrH,YAAmBY,IAAZZ,EAAwB,GAAKA,EAIxCa,oBACI,MAAMb,EAAU,IAAKpB,KAAK2B,6BAA8B3B,KAAKI,eACvD8B,EAAiB,IAAKlC,KAAK2B,6BAA8B3B,KAAKI,eAEpE,OADAJ,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAOkD,KAAKE,cAAcpD,IAAM0E,EAAM1B,OAASE,KAAKF,OAAMqB,OAAOC,QAAUA,EACxG,CAAEe,mBAAmB,iBAAMD,GAItCE,yBAEI,OADApC,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAOkD,KAAKE,cAAcpD,IAAM0E,EAAM1B,OAASE,KAAKF,OAAMqB,OAAOC,QAAUpB,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAOkD,KAAKE,cAAcpD,IAAM0E,EAAM1B,OAASE,KAAKF,OAAMqB,OAAOC,QAAQK,QAAOY,GAAKA,EAAEvF,KAAOkD,KAAKI,cAActD,KAC7P,CAAEqF,mBAAmB,EAAOD,eAAgBlC,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAOkD,KAAKE,cAAcpD,IAAM0E,EAAM1B,OAASE,KAAKF,OAAMqB,OAAOC,SAI5JkB,aAAaC,GAET,GAAGvC,KAAKE,gBAAkB,GAAI,OAE9BF,KAAKI,cAAgBmC,EAErB,MACMC,IADmBxC,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAOkD,KAAKE,cAAcpD,IAAM0E,EAAM1B,OAASE,KAAKF,UACtEE,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAOkD,KAAKE,cAAcpD,IAAM0E,EAAM1B,OAASE,KAAKF,MAAQ0B,EAAML,OAAOC,QAAQU,MAAKO,GAAKA,EAAEvF,KAAOyF,EAAOzF,QAEnLqF,kBAACA,EAAiBD,eAAEA,GAAmBM,EACxCxC,KAAKoC,yBACLpC,KAAKiC,oBAEX,MAAO,mBAAEE,iBAAmBD,GAIhCO,kBACI,MAAMjB,EAAQxB,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAOkD,KAAKE,cAAcpD,IAAM0E,EAAM1B,OAASE,KAAKF,OAChGsB,OAAoBY,IAAVR,GAAsBA,EAAML,OAAOC,QAAUI,EAAML,OAAOC,QAAe,GACnFsB,EAActB,EAAQvE,OAAS,EAAIuE,EAAQvE,OAAS,EAC1D,OAAuB,IAAhB6F,EAAoB,GAAKA,EAAYC,WAIhDC,wBAAwBC,GACpB,MAAMrB,EAAQxB,KAAKC,IAAI6B,MAAKN,GAASA,EAAML,OAAOrE,KAAO+F,GAAYrB,EAAM1B,OAASE,KAAKF,OACnFsB,OAAoBY,IAAVR,GAAsBA,EAAML,OAAOC,QAAUI,EAAML,OAAOC,QAAe,GACnFsB,EAActB,EAAQvE,OAAS,EAAIuE,EAAQvE,OAAS,EAC1D,OAAuB,IAAhB6F,EAAoB,GAAKA,EAAYC,gCAI3B7C,EAAMgD,GAEvB,IAAIhE,EAAO,GAEX,OAAOgB,GACH,KAAKzC,EAAY0C,KAAKpC,UAClBmB,EAAOgE,EAAQ,EAAC,eACKA,KAAO,YAExB,MACR,KAAKzF,EAAY0C,KAAKnC,UAClBkB,EAAOgE,EAAQ,EAAC,iBACOA,KAAO,YAOtC,OAAOhE,iCAIoBqB,EAASF,GAEpC,QAAW+B,IAAR/B,EACC,MAAO,CAAE8C,WAAY,EAAGC,aAAc,GAG1C,MAAM9B,EAAOf,EAAQe,KAIrB,MAAO,CACH6B,WAJuB,IAAK,IAAIE,IAAIhD,EAAIwB,QAAOyB,GAAKA,EAAEpD,OAASzC,EAAY0C,KAAKpC,WAAauF,EAAEhC,OAASA,IAAMK,KAAI2B,GAAKA,EAAEjC,WAAWpE,OAKpImG,aAJyB,IAAK,IAAIC,IAAIhD,EAAIwB,QAAOyB,GAAKA,EAAEpD,OAASzC,EAAY0C,KAAKnC,WAAasF,EAAEhC,OAASA,IAAMK,KAAI2B,GAAKA,EAAEjC,WAAWpE,oCASlHsD,EAASF,EAAKkB,EAAS,IAE/C,QAAWa,IAAR/B,EAEC,OADAkB,EAAO2B,MAAQ,EACR3B,EAIX,MAAMD,EAAOf,EAAQe,KAEf4B,EAAQ,IAAK,IAAIG,IAAIhD,EAAIwB,QAAOyB,GAAKA,EAAE/B,OAAOrE,KAAOqE,EAAOrE,IAAMoG,EAAEhC,OAASA,IAAMK,KAAI2B,GAAKA,EAAEjC,WAAWpE,OAG/G,OADAsE,EAAO2B,MAAQA,EACR3B,kCAIqBhB,EAASF,GAErC,QAAW+B,IAAR/B,EACC,MAAO,CAAE8C,WAAY,EAAGC,aAAc,GAG1C,MAAM9B,EAAOf,EAAQe,KAIrB,MAAO,CACH6B,WAJuB9C,EAAIwB,QAAOD,GAASA,EAAM1B,OAASzC,EAAY0C,KAAKpC,WAAa6D,EAAMN,OAASA,IAAMrE,OAK7GmG,aAJyB/C,EAAIwB,QAAOD,GAASA,EAAM1B,OAASzC,EAAY0C,KAAKnC,WAAa4D,EAAMN,OAASA,IAAMrE,UCnN3H,MAqDasG,EAAa,CAAItE,EAAGuE,IArDxBxE,OAASC,IAEd,MAAMwE,EAAQhG,EAAY6B,MAAMzB,KAC1B6F,EAAajG,EAAY8B,WAAWtB,OACpC0F,EAAMlG,EAAY+B,IAAIrB,WACtByF,EAAanG,EAAYoG,WAAWvF,WAEpC+B,QAAYpB,EAAEI,IAAIoE,EAAOC,EAAYC,GAE3CG,QAAQzD,IAAG,mBAAoBsD,aAAeF,UAAcC,gBAAyBE,QAAmBvD,GAExG,MAAME,EAAUtB,EAAE8E,aAElBD,QAAQzD,IAAI,4BAA6BE,GAEzC,MAAO4C,WAACA,EAAUC,aAAEA,GAAiBnD,EAAa+D,wBAAwBzD,EAASF,GAE7E4D,EAAgBhE,EAAaiE,cAAczG,EAAY0C,KAAKpC,UAAWoF,GACvEgB,EAAgBlE,EAAaiE,cAAczG,EAAY0C,KAAKnC,UAAWoF,GAO7E,GALAU,QAAQzD,IAAG,qBAAsBsD,oBAAwBtD,GAKvC,IAAf8C,GAAqC,IAAjBC,EAAoB,MAAO,GAElD,MAAMgB,EAAS,CACX,CACIlF,KAAM+E,EACNI,MAAO,OAEX,CACInF,KAAMiF,EACNE,MAAO,UAITC,EAAa,GAQnB,OANkB,IAAfnB,GACCmB,EAAWnD,KAAKiD,EAAO,IACP,IAAfjB,GACDmB,EAAWnD,KAAKiD,EAAO,IAGpBnF,EACNqC,KAAK,KAAM,QACXiD,MAAK,SAAUjD,GACZ,OAAOgD,MAKJE,CAAIvF,GCSFwF,EAAc,CAAIxF,EAAGuE,IA7DzBxE,OAASC,IAEd,MAAMwE,EAAQhG,EAAY6B,MAAMzB,KAC1B6F,EAAajG,EAAY8B,WAAWtB,OACpC0F,EAAMlG,EAAY+B,IAAIrB,WACtByF,EAAanG,EAAYoG,WAAWtF,YAEpC8B,QAAYpB,EAAEI,IAAIoE,EAAOC,EAAYC,GAE3CG,QAAQzD,IAAG,mBAAoBsD,aAAeF,UAAcC,gBAAyBE,QAAmBvD,GAExG,MAAME,EAAUtB,EAAE8E,aAElBD,QAAQzD,IAAI,4BAA6BE,GAEzC,MAAO4C,WAACA,EAAUC,aAAEA,GAAiBnD,EAAa+D,wBAAwBzD,EAASF,GAE7E4D,EAAgBhE,EAAaiE,cAAczG,EAAY0C,KAAKpC,UAAWoF,GACvEgB,EAAgBlE,EAAaiE,cAAczG,EAAY0C,KAAKnC,UAAWoF,GAEvEsB,EAAyBzF,IAC3B6E,QAAQzD,IAAI,2BAGViB,QAAarC,EAAEqC,KAAK,QAAQjC,IAAI,QAItC,OAFAyE,QAAQzD,IAAI,SAAU9C,KAAKoH,UAAUrD,EAAM,KAAM,IAE1C,CACH,CACIsD,KAhCM,4FAiCN1F,KAAM+E,EACNlE,UAAWtC,EAAYuC,UAAUlB,OACjCK,SAAU,SAASF,GACf,OAAOA,EAAE4F,MAAM,CACXnF,MAAO,YACPE,KAAM,CAAEM,KAAMzC,EAAY0C,KAAKpC,WAC/B4B,IAAK,0BACLmF,YAAY,EACZC,OAAQ,IACR5F,SAAUuF,MAItB,CACIE,KA/CM,4FAgDN1F,KAAMiF,EACNpE,UAAWtC,EAAYuC,UAAUlB,OACjCK,SAAU,SAASF,GACf,OAAOA,EAAE4F,MAAM,CACXnF,MAAO,YACPE,KAAM,CAAEM,KAAMzC,EAAY0C,KAAKnC,WAC/B2B,IAAK,0BACLmF,YAAY,EACZC,OAAQ,UAQjBC,CAAI/F,OC7DXgG,EAAW,SAAUC,GAGvB,IAEI9C,EAFA+C,EAAKpI,OAAOqI,UACZC,EAASF,EAAGG,eAEZC,EAA4B,mBAAXC,OAAwBA,OAAS,GAClDC,EAAiBF,EAAQG,UAAY,aACrCC,EAAsBJ,EAAQK,eAAiB,kBAC/CC,EAAoBN,EAAQO,aAAe,yBAEtCC,EAAOC,EAAKrC,EAAKsC,GAOxB,OANAlJ,OAAOmJ,eAAeF,EAAKrC,EAAK,CAC9BsC,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAELL,EAAIrC,GAEb,IAEEoC,EAAO,GAAI,IACX,MAAOO,GACPP,EAAS,SAASC,EAAKrC,EAAKsC,GAC1B,OAAOD,EAAIrC,GAAOsC,YAIbM,EAAKC,EAASC,EAASC,EAAMC,GAEpC,IAAIC,EAAiBH,GAAWA,EAAQrB,qBAAqByB,EAAYJ,EAAUI,EAC/EC,EAAY/J,OAAOgK,OAAOH,EAAexB,WACzC7E,EAAU,IAAIyG,EAAQL,GAAe,IAMzC,OAFAG,EAAUG,iBAuMcT,EAASE,EAAMnG,GACvC,IAAI2G,EAAQC,EAEZ,OAAO,SAAgBC,EAAQC,GAC7B,GAAIH,IAAUI,EACZ,MAAM,IAAIlK,MAAM,gCAGlB,GAAI8J,IAAUK,EAAmB,CAC/B,GAAe,UAAXH,EACF,MAAMC,EAKR,OAAOG,QAGTjH,EAAQ6G,OAASA,EACjB7G,EAAQ8G,IAAMA,IAED,CACX,IAAII,EAAWlH,EAAQkH,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUlH,GACnD,GAAImH,EAAgB,CAClB,GAAIA,IAAmBE,EAAkB,SACzC,OAAOF,GAIX,GAAuB,SAAnBnH,EAAQ6G,OAGV7G,EAAQsH,KAAOtH,EAAQuH,MAAQvH,EAAQ8G,SAElC,GAAuB,UAAnB9G,EAAQ6G,OAAoB,CACrC,GAAIF,IAAUC,EAEZ,MADAD,EAAQK,EACFhH,EAAQ8G,IAGhB9G,EAAQwH,kBAAkBxH,EAAQ8G,SAEN,WAAnB9G,EAAQ6G,QACjB7G,EAAQyH,OAAO,SAAUzH,EAAQ8G,KAGnCH,EAAQI,EAER,IAAIW,EAASC,EAAS1B,EAASE,EAAMnG,GACrC,GAAoB,WAAhB0H,EAAO/H,KAAmB,CAO5B,GAJAgH,EAAQ3G,EAAQ4H,KACZZ,EACAa,EAEAH,EAAOZ,MAAQO,EACjB,SAGF,MAAO,CACL3B,MAAOgC,EAAOZ,IACdc,KAAM5H,EAAQ4H,MAGS,UAAhBF,EAAO/H,OAChBgH,EAAQK,EAGRhH,EAAQ6G,OAAS,QACjB7G,EAAQ8G,IAAMY,EAAOZ,OA/QPgB,CAAiB7B,EAASE,EAAMnG,GAE7CuG,WAcAoB,EAASI,EAAItC,EAAKqB,GACzB,IACE,MAAO,CAAEnH,KAAM,SAAUmH,IAAKiB,EAAGC,KAAKvC,EAAKqB,IAC3C,MAAOf,GACP,MAAO,CAAEpG,KAAM,QAASmH,IAAKf,IAhBjCpB,EAAQqB,KAAOA,EAoBf,IAAIY,EAAyB,iBACzBiB,EAAyB,iBACzBd,EAAoB,YACpBC,EAAoB,YAIpBK,EAAmB,YAMdf,cACA2B,cACAC,KAIT,IAAIC,EAAoB,GACxB3C,EAAO2C,EAAmBjD,GAAgB,WACxC,OAAOrF,QAGT,IAAIuI,EAAW5L,OAAO6L,eAClBC,EAA0BF,GAAYA,EAASA,EAASG,EAAO,MAC/DD,GACAA,IAA4B1D,GAC5BE,EAAOkD,KAAKM,EAAyBpD,KAGvCiD,EAAoBG,GAGtB,IAAIE,EAAKN,EAA2BrD,UAClCyB,EAAUzB,UAAYrI,OAAOgK,OAAO2B,YAY7BM,EAAsB5D,GAC7B,CAAC,OAAQ,QAAS,UAAU6D,SAAQ,SAAS7B,GAC3CrB,EAAOX,EAAWgC,GAAQ,SAASC,GACjC,OAAOjH,KAAK6G,QAAQG,EAAQC,kBAkCzB6B,EAAcpC,EAAWqC,YACvBC,EAAOhC,EAAQC,EAAKgC,EAASC,GACpC,IAAIrB,EAASC,EAASpB,EAAUM,GAASN,EAAWO,GACpD,GAAoB,UAAhBY,EAAO/H,KAEJ,CACL,IAAIqJ,EAAStB,EAAOZ,IAChBpB,EAAQsD,EAAOtD,MACnB,OAAIA,GACiB,iBAAVA,GACPZ,EAAOkD,KAAKtC,EAAO,WACdkD,EAAYE,QAAQpD,EAAMuD,SAASjF,MAAK,SAAS0B,GACtDmD,EAAO,OAAQnD,EAAOoD,EAASC,MAC9B,SAAShD,GACV8C,EAAO,QAAS9C,EAAK+C,EAASC,MAI3BH,EAAYE,QAAQpD,GAAO1B,MAAK,SAASkF,GAI9CF,EAAOtD,MAAQwD,EACfJ,EAAQE,MACP,SAASG,GAGV,OAAON,EAAO,QAASM,EAAOL,EAASC,MAvBzCA,EAAOrB,EAAOZ,KA4BlB,IAAIsC,EAgCJvJ,KAAK6G,iBA9BYG,EAAQC,YACduC,IACP,OAAO,IAAIT,GAAY,SAASE,EAASC,GACvCF,EAAOhC,EAAQC,EAAKgC,EAASC,MAIjC,OAAOK,EAaLA,EAAkBA,EAAgBpF,KAChCqF,EAGAA,GACEA,cAkHDjC,EAAoBF,EAAUlH,GACrC,IAAI6G,EAASK,EAAS/B,SAASnF,EAAQ6G,QACvC,GAAIA,IAAWhF,EAAW,CAKxB,GAFA7B,EAAQkH,SAAW,KAEI,UAAnBlH,EAAQ6G,OAAoB,CAE9B,GAAIK,EAAS/B,SAAiB,SAG5BnF,EAAQ6G,OAAS,SACjB7G,EAAQ8G,IAAMjF,EACduF,EAAoBF,EAAUlH,GAEP,UAAnBA,EAAQ6G,QAGV,OAAOQ,EAIXrH,EAAQ6G,OAAS,QACjB7G,EAAQ8G,IAAM,IAAIwC,UAChB,kDAGJ,OAAOjC,EAGT,IAAIK,EAASC,EAASd,EAAQK,EAAS/B,SAAUnF,EAAQ8G,KAEzD,GAAoB,UAAhBY,EAAO/H,KAIT,OAHAK,EAAQ6G,OAAS,QACjB7G,EAAQ8G,IAAMY,EAAOZ,IACrB9G,EAAQkH,SAAW,KACZG,EAGT,IAAIkC,EAAO7B,EAAOZ,IAElB,OAAMyC,EAOFA,EAAK3B,MAGP5H,EAAQkH,EAASsC,YAAcD,EAAK7D,MAGpC1F,EAAQyJ,KAAOvC,EAASwC,QAQD,WAAnB1J,EAAQ6G,SACV7G,EAAQ6G,OAAS,OACjB7G,EAAQ8G,IAAMjF,GAUlB7B,EAAQkH,SAAW,KACZG,GANEkC,GA3BPvJ,EAAQ6G,OAAS,QACjB7G,EAAQ8G,IAAM,IAAIwC,UAAU,oCAC5BtJ,EAAQkH,SAAW,KACZG,YAoDFsC,EAAaC,GACpB,IAAIvI,EAAQ,CAAEwI,OAAQD,EAAK,IAEvB,KAAKA,IACPvI,EAAMyI,SAAWF,EAAK,IAGpB,KAAKA,IACPvI,EAAM0I,WAAaH,EAAK,GACxBvI,EAAM2I,SAAWJ,EAAK,IAGxB/J,KAAKoK,WAAWrJ,KAAKS,YAGd6I,EAAc7I,GACrB,IAAIqG,EAASrG,EAAM8I,YAAc,GACjCzC,EAAO/H,KAAO,gBACP+H,EAAOZ,IACdzF,EAAM8I,WAAazC,WAGZjB,EAAQL,GAIfvG,KAAKoK,WAAa,CAAC,CAAEJ,OAAQ,SAC7BzD,EAAYsC,QAAQiB,EAAc9J,MAClCA,KAAKuK,OAAM,YA8BJ7B,EAAO8B,GACd,GAAIA,EAAU,CACZ,IAAIC,EAAiBD,EAASnF,GAC9B,GAAIoF,EACF,OAAOA,EAAetC,KAAKqC,GAG7B,GAA6B,mBAAlBA,EAASZ,KAClB,OAAOY,EAGT,IAAKE,MAAMF,EAAS3N,QAAS,CAC3B,IAAID,GAAI,EAAIgN,EAAO,SAASA,WACjBhN,EAAI4N,EAAS3N,WAChBoI,EAAOkD,KAAKqC,EAAU5N,GAGxB,OAFAgN,EAAK/D,MAAQ2E,EAAS5N,GACtBgN,EAAK7B,MAAO,EACL6B,EAOX,OAHAA,EAAK/D,MAAQ7D,EACb4H,EAAK7B,MAAO,EAEL6B,GAGT,OAAOA,EAAKA,KAAOA,GAKvB,MAAO,CAAEA,KAAMxC,YAIRA,IACP,MAAO,CAAEvB,MAAO7D,EAAW+F,MAAM,GA+MnC,OA7mBAK,EAAkBpD,UAAYqD,EAC9B1C,EAAOgD,EAAI,cAAeN,GAC1B1C,EAAO0C,EAA4B,cAAeD,GAClDA,EAAkBuC,YAAchF,EAC9B0C,EACA5C,EACA,qBAaFX,EAAQ8F,oBAAsB,SAASC,GACrC,IAAIC,EAAyB,mBAAXD,GAAyBA,EAAOE,YAClD,QAAOD,IACHA,IAAS1C,GAG2B,uBAAnC0C,EAAKH,aAAeG,EAAKE,QAIhClG,EAAQmG,KAAO,SAASJ,GAQtB,OAPIlO,OAAOuO,eACTvO,OAAOuO,eAAeL,EAAQxC,IAE9BwC,EAAOM,UAAY9C,EACnB1C,EAAOkF,EAAQpF,EAAmB,sBAEpCoF,EAAO7F,UAAYrI,OAAOgK,OAAOgC,GAC1BkC,GAOT/F,EAAQsG,MAAQ,SAASnE,GACvB,MAAO,CAAEmC,QAASnC,IAsEpB2B,EAAsBE,EAAc9D,WACpCW,EAAOmD,EAAc9D,UAAWO,GAAqB,WACnD,OAAOvF,QAET8E,EAAQgE,cAAgBA,EAKxBhE,EAAQlG,MAAQ,SAASwH,EAASC,EAASC,EAAMC,EAAawC,QACxC,IAAhBA,IAAwBA,EAAcsC,SAE1C,IAAIC,EAAO,IAAIxC,EACb3C,EAAKC,EAASC,EAASC,EAAMC,GAC7BwC,GAGF,OAAOjE,EAAQ8F,oBAAoBvE,GAC/BiF,EACAA,EAAK1B,OAAOzF,MAAK,SAASgF,GACxB,OAAOA,EAAOpB,KAAOoB,EAAOtD,MAAQyF,EAAK1B,WAuKjDhB,EAAsBD,GAEtBhD,EAAOgD,EAAIlD,EAAmB,aAO9BE,EAAOgD,EAAItD,GAAgB,WACzB,OAAOrF,QAGT2F,EAAOgD,EAAI,YAAY,WACrB,MAAO,wBAkCT7D,EAAQpI,KAAO,SAAS6O,GACtB,IAAI7O,EAAO,GACX,IAAK,IAAI6G,KAAOgI,EACd7O,EAAKqE,KAAKwC,GAMZ,OAJA7G,EAAK8O,UAIE,SAAS5B,SACPlN,EAAKG,QAAQ,CAClB,IAAI0G,EAAM7G,EAAK+O,MACf,GAAIlI,KAAOgI,EAGT,OAFA3B,EAAK/D,MAAQtC,EACbqG,EAAK7B,MAAO,EACL6B,EAQX,OADAA,EAAK7B,MAAO,EACL6B,IAsCX9E,EAAQ4D,OAASA,EAMjB9B,EAAQ5B,UAAY,CAClB+F,YAAanE,EAEb2D,MAAO,SAASmB,GAcd,GAbA1L,KAAK2L,KAAO,EACZ3L,KAAK4J,KAAO,EAGZ5J,KAAKyH,KAAOzH,KAAK0H,MAAQ1F,EACzBhC,KAAK+H,MAAO,EACZ/H,KAAKqH,SAAW,KAEhBrH,KAAKgH,OAAS,OACdhH,KAAKiH,IAAMjF,EAEXhC,KAAKoK,WAAWvB,QAAQwB,IAEnBqB,EACH,IAAK,IAAIV,KAAQhL,KAEQ,MAAnBgL,EAAKY,OAAO,IACZ3G,EAAOkD,KAAKnI,KAAMgL,KACjBN,OAAOM,EAAKa,MAAM,MACrB7L,KAAKgL,GAAQhJ,IAMrB8J,KAAM,WACJ9L,KAAK+H,MAAO,EAEZ,IACIgE,EADY/L,KAAKoK,WAAW,GACLE,WAC3B,GAAwB,UAApByB,EAAWjM,KACb,MAAMiM,EAAW9E,IAGnB,OAAOjH,KAAKgM,MAGdrE,kBAAmB,SAASsE,GAC1B,GAAIjM,KAAK+H,KACP,MAAMkE,EAGR,IAAI9L,EAAUH,cACLkM,EAAOC,EAAKC,GAYnB,OAXAvE,EAAO/H,KAAO,QACd+H,EAAOZ,IAAMgF,EACb9L,EAAQyJ,KAAOuC,EAEXC,IAGFjM,EAAQ6G,OAAS,OACjB7G,EAAQ8G,IAAMjF,KAGNoK,EAGZ,IAAK,IAAIxP,EAAIoD,KAAKoK,WAAWvN,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAI4E,EAAQxB,KAAKoK,WAAWxN,GACxBiL,EAASrG,EAAM8I,WAEnB,GAAqB,SAAjB9I,EAAMwI,OAIR,OAAOkC,EAAO,OAGhB,GAAI1K,EAAMwI,QAAUhK,KAAK2L,KAAM,CAC7B,IAAIU,EAAWpH,EAAOkD,KAAK3G,EAAO,YAC9B8K,EAAarH,EAAOkD,KAAK3G,EAAO,cAEpC,GAAI6K,GAAYC,EAAY,CAC1B,GAAItM,KAAK2L,KAAOnK,EAAMyI,SACpB,OAAOiC,EAAO1K,EAAMyI,UAAU,GACzB,GAAIjK,KAAK2L,KAAOnK,EAAM0I,WAC3B,OAAOgC,EAAO1K,EAAM0I,iBAGjB,GAAImC,GACT,GAAIrM,KAAK2L,KAAOnK,EAAMyI,SACpB,OAAOiC,EAAO1K,EAAMyI,UAAU,OAG3B,CAAA,IAAIqC,EAMT,MAAM,IAAItP,MAAM,0CALhB,GAAIgD,KAAK2L,KAAOnK,EAAM0I,WACpB,OAAOgC,EAAO1K,EAAM0I,gBAU9BtC,OAAQ,SAAS9H,EAAMmH,GACrB,IAAK,IAAIrK,EAAIoD,KAAKoK,WAAWvN,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAI4E,EAAQxB,KAAKoK,WAAWxN,GAC5B,GAAI4E,EAAMwI,QAAUhK,KAAK2L,MACrB1G,EAAOkD,KAAK3G,EAAO,eACnBxB,KAAK2L,KAAOnK,EAAM0I,WAAY,CAChC,IAAIqC,EAAe/K,EACnB,OAIA+K,IACU,UAATzM,GACS,aAATA,IACDyM,EAAavC,QAAU/C,GACvBA,GAAOsF,EAAarC,aAGtBqC,EAAe,MAGjB,IAAI1E,EAAS0E,EAAeA,EAAajC,WAAa,GAItD,OAHAzC,EAAO/H,KAAOA,EACd+H,EAAOZ,IAAMA,EAETsF,GACFvM,KAAKgH,OAAS,OACdhH,KAAK4J,KAAO2C,EAAarC,WAClB1C,GAGFxH,KAAKwM,SAAS3E,IAGvB2E,SAAU,SAAS3E,EAAQsC,GACzB,GAAoB,UAAhBtC,EAAO/H,KACT,MAAM+H,EAAOZ,IAcf,MAXoB,UAAhBY,EAAO/H,MACS,aAAhB+H,EAAO/H,KACTE,KAAK4J,KAAO/B,EAAOZ,IACM,WAAhBY,EAAO/H,MAChBE,KAAKgM,KAAOhM,KAAKiH,IAAMY,EAAOZ,IAC9BjH,KAAKgH,OAAS,SACdhH,KAAK4J,KAAO,OACa,WAAhB/B,EAAO/H,MAAqBqK,IACrCnK,KAAK4J,KAAOO,GAGP3C,GAGTiF,OAAQ,SAASvC,GACf,IAAK,IAAItN,EAAIoD,KAAKoK,WAAWvN,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAI4E,EAAQxB,KAAKoK,WAAWxN,GAC5B,GAAI4E,EAAM0I,aAAeA,EAGvB,OAFAlK,KAAKwM,SAAShL,EAAM8I,WAAY9I,EAAM2I,UACtCE,EAAc7I,GACPgG,IAKbkF,MAAS,SAAS1C,GAChB,IAAK,IAAIpN,EAAIoD,KAAKoK,WAAWvN,OAAS,EAAGD,GAAK,IAAKA,EAAG,CACpD,IAAI4E,EAAQxB,KAAKoK,WAAWxN,GAC5B,GAAI4E,EAAMwI,SAAWA,EAAQ,CAC3B,IAAInC,EAASrG,EAAM8I,WACnB,GAAoB,UAAhBzC,EAAO/H,KAAkB,CAC3B,IAAI6M,EAAS9E,EAAOZ,IACpBoD,EAAc7I,GAEhB,OAAOmL,GAMX,MAAM,IAAI3P,MAAM,0BAGlB4P,cAAe,SAASpC,EAAUb,EAAYE,GAa5C,OAZA7J,KAAKqH,SAAW,CACd/B,SAAUoD,EAAO8B,GACjBb,WAAYA,EACZE,QAASA,GAGS,SAAhB7J,KAAKgH,SAGPhH,KAAKiH,IAAMjF,GAGNwF,IAQJ1C,EA9sBM,KAwtBf,IACE+H,mBAAqBhI,EACrB,MAAOiI,GAWmB,iBAAfC,WACTA,WAAWF,mBAAqBhI,EAEhCmI,SAAS,IAAK,yBAAdA,CAAwCnI,OC9tB5CoI,EALc,SAZEtQ,OAAOW,OAAO,CAC1B4P,IAAK,MACLC,QAAS,UACTC,IAAK,MACLC,gBAAiB,KACjBC,UAAW,2BAGM3Q,OAAOW,OAAO,CAC/BiQ,OAAQ,8CCTZC,EAAA1I,QAAc2I,OAAuB,KAAOxQ,EAAA,SAAAgM,QAA6C,UAAW9E,MAAI,IAAOlH,EAAc,gDCA7HuQ,EAAA1I,QAAc2I,OAAuB,KAAOxQ,EAAA,SAAAgM,QAA6C,UAAW9E,MAAI,IAAOlH,EAAc,gDCA7HuQ,EAAA1I,QAAc2I,OAAuB,KAAOxQ,EAAA,SAAAgM,QAA6C,UAAW9E,MAAI,IAAOlH,EAAc,gDCA7HuQ,EAAA1I,QAAc2I,OAAuB,KAAOxQ,EAAA,SAAAgM,QAA6C,UAAW9E,MAAI,IAAOlH,EAAc,gDCA7HuQ,EAAA1I,QAAc2I,OAAuB,KAAOxQ,EAAA,SAAAgM,QAA6C,UAAW9E,MAAI,IAAOlH,EAAc,gDCA7HuQ,EAAA1I,QAAc2I,OAAuB,KAAOxQ,EAAA,SAAAgM,QAA6C,UAAW9E,MAAI,IAAOlH,EAAc,cCU7H,MAAMyQ,EAAiB9O,MAAS9B,IAE5B,IAAI6Q,EAAMC,EAEV,MAAM,WACF,OAAO9Q,GACH,KAAKmQ,EAAMY,QAAQX,IAGf,OAFAS,QAAa1Q,EAAA,SACb2Q,QAAmB3Q,EAAA,SACZ,IAAK0Q,KAASC,GACzB,KAAKX,EAAMY,QAAQV,QAGf,OAFAQ,QAAa1Q,EAAA,SACb2Q,QAAmB3Q,EAAA,SACZ,IAAK0Q,KAASC,GACzB,KAAKX,EAAMY,QAAQT,IAEf,OADAO,QAAa1Q,EAAA,SACN,IAAK0Q,KAASC,GACzB,KAAKX,EAAMY,QAAQP,UAEf,OADAK,QAAa1Q,EAAA,SACN,IAAK0Q,KAASC,KAf3B,QAyBVE,EALY,eAhCOlP,MAASmP,IAExB,MAAMjR,EAAKiR,EAAOjR,GAElB,aAAa4Q,EAAkB5Q,sBA8B/B4Q,OC4CJM,EAPiB,SApEJpP,MAASI,SACL8O,EAAIG,kBAAkBjP,EAAMlC,6BAGf,CAAI6Q,EAAMnK,KAEpC,MACM0K,EADeP,EAAKQ,aACerM,MAAKsM,GAAKA,EAAE5K,aAAeA,IAEpE,OAAG0K,GAAuBA,EAAoBG,QACnCH,EAAoBI,OAEpB,oBA0BM1P,OAAW2P,QAAAA,EAAOtO,IAAEA,EAAGE,QAAEA,EAAOd,MAAEA,EAAQ,SAE3DqE,QAAQzD,IAAI,wBAAyBA,GAE9BZ,EACGkP,EAAQhN,KAAIJ,IACH,CACHrC,KAAI,GAAKqC,EAAOrC,QAAQe,EAAa2O,qBAAqBrO,EAASF,EAAKkB,KACxExB,UAAWtC,EAAYuC,UAAUlB,OACjCK,SAAUF,GA/BJ,EAAIA,EAAGsB,EAASd,IAE/BR,EAAEQ,MAAM,CACXC,MAAOD,EAAMoP,OACbC,MAAOrP,EAAMsP,UA2BcC,CAAqB/P,EAAGsB,EAASd,OAGtDkP,EAAQhN,KAAIJ,IACH,CACHrC,KAAMqC,EAAOrC,KACba,UAAWtC,EAAYuC,UAAUlB,OACjCK,SAAUF,GA5BHD,OAAUC,EAAGsB,EAASgB,KAE7C,MAAM0N,EAAe,IAAIhP,GAElBwB,kBAACA,EAAiBC,eAAEA,GAAmBuN,EAAajN,aAAazB,EAASgB,GAGjF,aADMtC,EAAEiQ,IAAIzL,MAAOC,WAAYC,IAAKjC,SACvBzC,EAAEI,IAAIoE,MAAOC,WAAYC,MAqBPwL,CAAsBlQ,EAAGsB,EAASgB,iBAKvDvC,MAAS+O,IAEnB,MAAMtO,EAAQsO,EAAKtO,MAEnB,OAAIA,GAAUA,IAAUA,EAAMgP,QAAiB,KAExChP,ICnEX,MAoBa2P,EAAmB,CAAInQ,EAAGuE,IApB9BxE,OAASC,IAEd,MAAMsB,EAAUtB,EAAE8E,aACZsL,QAAmBpQ,EAAEI,IAAI5B,EAAY6B,MAAMzB,KAAMJ,EAAY8B,WAAWtB,OAAQR,EAAY+B,IAAIrB,YAEtG,IAAIkC,EAEDgP,QAA6BjN,IAAfiN,IACbhP,EAAM4O,aAAalO,OAAOsO,IAG9B,MAAMjQ,QAAcH,EAAEI,IAAI5B,EAAY6B,MAAM3B,MAAOF,EAAY8B,WAAWtB,OAAQR,EAAY+B,IAAIpB,sBAC5F2P,QAAaK,EAASkB,QAAQlQ,GAE9BuP,QAAgBP,EAASmB,yBAAyBxB,EAAMtQ,EAAYoG,WAAWrF,kBAGrF,aAFqB4P,EAASoB,gBAAgB,SAACb,MAAStO,EAAKE,QAAS,CAACa,MAAOb,EAAQa,MAAOE,KAAMf,EAAQe,KAAMD,OAAQd,EAAQc,WAM1HoO,CAAIxQ,GCnBfyQ,OAAOC,cAAcC,WAAW,CAE5B,gBAAe,CAAG3Q,EAAGuE,IfqBdzE,IepBP,cAAa,CAAGE,EAAGuE,IAASD,EAActE,GAC1C,eAAc,CAAGA,EAAGuE,IAASiB,EAAexF,GAC5C,qBAAoB,CAAGA,EAAGuE,IAAS4L,EAAoBnQ","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-1766084c18270ada.js","src/shared/trello-enums.js","src/capabilities/board-buttons.js","src/shared/challenge-log.js","src/capabilities/card-badges.js","src/capabilities/card-buttons.js","node_modules/regenerator-runtime/runtime.js","src/api/enums.js","node_modules/@parcel/runtime-js/lib/runtime-55e5ebecc04afa50.js","node_modules/@parcel/runtime-js/lib/runtime-237fb8d62ddb295a.js","node_modules/@parcel/runtime-js/lib/runtime-9b045f6875d19687.js","node_modules/@parcel/runtime-js/lib/runtime-975a9087b41bd714.js","node_modules/@parcel/runtime-js/lib/runtime-3a2c65592369123b.js","node_modules/@parcel/runtime-js/lib/runtime-dc6733200bf4e468.js","src/api/api.js","src/shared/capability-selector.js","src/capabilities/card-detail-badges.js","src/js/connector.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"2JFQr\\\":\\\"index.fd94b6c3.js\\\",\\\"bJmGX\\\":\\\"rtw.db725a81.js\\\",\\\"7WKo9\\\":\\\"rtw-trello.edaa1442.js\\\",\\\"cX2tx\\\":\\\"spotify.1e0f0708.js\\\",\\\"irEM1\\\":\\\"spotify-trello.00774160.js\\\",\\\"2Ywgl\\\":\\\"swm.415b8913.js\\\",\\\"cHbDk\\\":\\\"princeton.82973572.js\\\"}\"));","const Scope = Object.freeze({\n    Board: 'board',\n    Member: 'member',\n    Card: 'card',\n    Organization: 'organization'\n});\n\nconst Type = Object.freeze({\n    Challenge: 'challenge',\n    Celebrate: 'celebrate'\n});\n\nconst Visibility = Object.freeze({\n    Shared: 'shared',\n    Private: 'private'\n});\n\nconst Key = Object.freeze({\n    LogEntries: 'Log entries',\n    ChallengePreferences: 'Challenge preferences'\n});\n\nconst Capability = Object.freeze({\n    BoardButtons: 'board-buttons',\n    CardBadges: 'card-badges',\n    CardButtons: 'card-buttons',\n    CardDetailBadges: 'card-detail-badges'\n});\n\nconst Condition = Object.freeze({\n    Admin: 'admin',\n    Edit: 'edit',\n    ReadOnly: 'readOnly',\n    SignedIn: 'signedIn',\n    SignedOut: 'signedOut',\n    Always: 'always'\n});\n\nconst trelloEnums = {\n    Scope,\n    Type,\n    Visibility,\n    Key,\n    Capability,\n    Condition\n};\n\nexport default trelloEnums;","import trelloEnums from '../shared/trello-enums';\n\n// const GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\n// const BLACK_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-black.svg';\n// const WHITE_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-white.svg';\n\nconst get = async t => {\n\n    const onBtnClick = async t => {\n\n        const prefs = await t.get(trelloEnums.Scope.Board, trelloEnums.Visibility.Shared, trelloEnums.Key.ChallengePreferences);\n\n        return t.popup({\n            title: 'Toolbox preferences',\n            url: './popups/board-buttons-popup-authors.html',\n            args: { myArgs: prefs }\n        });\n    };\n\n    return [{\n        text: 'Challenge Toolbox',\n        callback: t => onBtnClick(t),\n        condition: trelloEnums.Condition.Always\n      }];\n\n};\n\nexport const getBoardButtons = (t, opts) => {\n    return get(t);\n}","import trelloEnums from './trello-enums';\n\nclass ChallengeLog {\n\n    constructor(type = trelloEnums.Type.Challenge) {\n      this.type = type;\n      this.log = [];\n      this.currentPledge = {};\n      this.context = {};\n      this.currentReason = {};\n    }\n\n    // private \n    islogTruthy(val) {\n        return (val !== null && val !== undefined && val !== [] && Object.entries(val).length > 0 || typeof(val) === 'number' );\n    }\n\n    // private \n    islogFalsy(val) {\n        return !this.islogTruthy(val);\n    }\n\n    // public \n    isLogEmpty() {\n        return this.log === [];\n    }\n  \n    // public\n    getLog() {\n        return this.log;\n    }\n  \n    // public\n    setLog(log) {\n        this.log = log;\n        return this.log;\n    }\n  \n    // public\n    setType(type) {\n        this.type = type;\n        return this.type;\n    }\n\n    // public\n    getCurrentPledge() {\n        return this.currentPledge;\n    }\n\n    // private\n    addPledgeToLog() {\n        this.log.push({\n                type: this.type,\n                board: this.context.board,\n                member: this.context.member,\n                card: this.context.card,\n                pledge: {\n                    id: this.currentPledge.id,\n                    text: this.currentPledge.text,\n                    reasons: []\n                },                \n            })\n            return { isPledgeNowLogged: true, updatedPledges: this.log.map(entry => entry.pledge).filter(entry => entry.type === this.type) };\n    };\n    \n    // private\n    removePledgeFromLog() {\n        if(this.isLogEmpty()) return { isPledgeNowLogged: false, updatedPledges: [] };\n        if(this.getReasonsForCurrentPledge(this.currentPledge).length > 0) {\n            return { isPledgeNowLogged: false, updatedPledges: this.log.map(entry => entry.pledge) };\n        }\n        this.log = this.log.filter(entry => entry.pledge.id !== this.currentPledge.id && entry.type === this.type);\n        return { isPledgeNowLogged: false, updatedPledges: this.log.map(entry => entry.pledge).filter(entry => entry.type === this.type) };\n    }\n\n    // public\n    togglePledge(context, pledge) {\n\n        this.currentPledge = pledge;\n        this.context = context;\n        \n        const isPledgeLogged = this.isLogEmpty() ? false : this.islogTruthy(this.log.find(entry => entry.pledge.id === pledge.id && entry.type === this.type));\n\n        const { isPledgeNowLogged, updatedPledges } = isPledgeLogged\n            ? this.removePledgeFromLog()\n            : this.addPledgeToLog();\n\n        return { isPledgeNowLogged, updatedPledges };\n    }\n\n    // public\n    getLoggedPledges() {\n        return this.log.map(entry => entry.pledge);\n    }\n\n    // public \n    getReasonsForCurrentPledge() {\n        if(this.islogFalsy(this.currentPledge) || this.isLogEmpty()) return [];\n        const reasons = this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons;\n        return reasons === undefined ? [] : reasons;\n    }\n\n    // private \n    addReasonToPledge() {\n        const reasons = [ ...this.getReasonsForCurrentPledge(), this.currentReason ];\n        const updatedReasons = [ ...this.getReasonsForCurrentPledge(), this.currentReason ];\n        this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons = reasons;\n        return { isReasonNowLogged: true, updatedReasons };\n    }\n\n    // private\n    removeReasonFromPledge() {        \n        this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons = this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons.filter(r => r.id !== this.currentReason.id);\n        return { isReasonNowLogged: false, updatedReasons: this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type).pledge.reasons };\n    }\n\n    // public\n    toggleReason(reason) {\n\n        if(this.currentPledge === {}) return;\n\n        this.currentReason = reason;\n\n        const isPledgeLogged = !!this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type);\n        const isReasonLogged = isPledgeLogged && !!this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type && entry.pledge.reasons.find(r => r.id === reason.id));\n\n        const { isReasonNowLogged, updatedReasons } = isReasonLogged \n            ? this.removeReasonFromPledge()\n            : this.addReasonToPledge();\n\n        return { isReasonNowLogged, updatedReasons };\n    }\n\n    // public\n    getReasonsCount() {\n        const entry = this.log.find(entry => entry.pledge.id === this.currentPledge.id && entry.type === this.type);\n        const reasons = entry !== undefined ? entry.pledge.reasons ? entry.pledge.reasons : [] : [];\n        const reasonCount = reasons.length > 0 ? reasons.length : 0;\n        return reasonCount === 0 ? '' : reasonCount.toString();\n    }\n\n    // public\n    getReasonsCountByPledge(pledgeId) {\n        const entry = this.log.find(entry => entry.pledge.id === pledgeId && entry.type === this.type);\n        const reasons = entry !== undefined ? entry.pledge.reasons ? entry.pledge.reasons : [] : [];\n        const reasonCount = reasons.length > 0 ? reasons.length : 0;\n        return reasonCount === 0 ? '' : reasonCount.toString();\n    }\n\n    // public static\n    static getButtonText(type, count) {\n     \n        let text = '';\n\n        switch(type) {\n            case trelloEnums.Type.Challenge:\n                text = count > 0\n                    ? `Challenges (${count})`\n                    : `Challenge`;\n                    break;\n            case trelloEnums.Type.Celebrate:\n                text = count > 0\n                    ? `Celebrations (${count})`\n                    : `Celebrate`;\n                    break;\n        }\n\n        // console.warn('button text: ', text);\n\n        return text;\n    }\n\n    // public static\n    static getChallengeBadgeCounts(context, log) {\n\n        if(log === undefined) {\n            return { challenges: 0, celebrations: 0 };\n        }\n\n        const card = context.card;\n        const cardChallengeCount = [ ...new Set(log.filter(e => e.type === trelloEnums.Type.Challenge && e.card === card).map(e => e.member)) ].length;\n        const cardCelebrationCount = [ ...new Set(log.filter(e => e.type === trelloEnums.Type.Celebrate && e.card === card).map(e => e.member)) ].length;\n\n        return {\n            challenges: cardChallengeCount,\n            celebrations: cardCelebrationCount\n        }\n    }\n\n    // public static \n    static getCustomBadgeCounts(context, log, pledge = {}) {\n\n        if(log === undefined) {            \n            pledge.count = 0;\n            return pledge;\n            // return { ...pledge, count : 0 };\n        }\n\n        const card = context.card;\n\n        const count = [ ...new Set(log.filter(e => e.pledge.id === pledge.id && e.card === card).map(e => e.member)) ].length;\n\n        pledge.count = count;\n        return pledge;\n        // return { ...pledge, count };\n    }\n\n    static getChallengePledgeCounts(context, log) {\n\n        if(log === undefined) {\n            return { challenges: 0, celebrations: 0 };\n        }\n\n        const card = context.card;\n        const cardChallengeCount = log.filter(entry => entry.type === trelloEnums.Type.Challenge && entry.card === card).length;\n        const cardCelebrationCount = log.filter(entry => entry.type === trelloEnums.Type.Celebrate && entry.card === card).length;\n\n        return {\n            challenges: cardChallengeCount,\n            celebrations: cardCelebrationCount\n        }\n    }\n};\n\nexport default ChallengeLog;","import trelloEnums from '../shared/trello-enums';\n\nimport ChallengeLog from '../shared/challenge-log';\n\nconst get = async t => {\n\n    const scope = trelloEnums.Scope.Card;\n    const visibility = trelloEnums.Visibility.Shared;\n    const key = trelloEnums.Key.LogEntries;\n    const capability = trelloEnums.Capability.CardBadges;\n\n    const log = await t.get(scope, visibility, key);\n\n    console.log(`Data stored for ${key} against ${scope} with ${visibility} access for ${capability}  : `,  log);\n\n    const context = t.getContext();\n\n    console.log('Context for card badges: ', context);\n\n    const { challenges, celebrations } = ChallengeLog.getChallengeBadgeCounts(context, log);\n\n    const challengeText = ChallengeLog.getButtonText(trelloEnums.Type.Challenge, challenges);\n    const celebrateText = ChallengeLog.getButtonText(trelloEnums.Type.Celebrate, celebrations);\n\n    console.log(`Current value for ${key} for card-badges`,  log);\n\n    // check for card in log - if there's a match return challenges, celebrations, both or neither\n    // match count agsainst specific card\n\n    if(challenges === 0 && celebrations === 0) return [];\n\n    const badges = [\n        {\n            text: challengeText,\n            color: \"red\"\n        },\n        {\n            text: celebrateText,\n            color: \"green\"\n        },\n    ];\n\n    const badgeArray = [];\n    \n    if(challenges !== 0) {\n        badgeArray.push(badges[0]);\n    } if(challenges !== 0) {\n        badgeArray.push(badges[1]);\n    }\n\n    return t\n    .card('id', 'name')            \n    .then(function (card) {\n        return badgeArray;\n    });\n};\n\nexport const getCardBadges = (t, opts) => {\n    return get(t);\n}","import trelloEnums from '../shared/trello-enums';\n\nimport ChallengeLog from '../shared/challenge-log';\n\nconst GRAY_ICON = 'https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg';\n\nconst get = async t => {\n\n    const scope = trelloEnums.Scope.Card;\n    const visibility = trelloEnums.Visibility.Shared;\n    const key = trelloEnums.Key.LogEntries;\n    const capability = trelloEnums.Capability.CardButtons;\n\n    const log = await t.get(scope, visibility, key);\n\n    console.log(`Data stored for ${key} against ${scope} with ${visibility} access for ${capability}  : `,  log);\n\n    const context = t.getContext();\n\n    console.log('Context for card badges: ', context);\n\n    const { challenges, celebrations } = ChallengeLog.getChallengeBadgeCounts(context, log);\n\n    const challengeText = ChallengeLog.getButtonText(trelloEnums.Type.Challenge, challenges);\n    const celebrateText = ChallengeLog.getButtonText(trelloEnums.Type.Celebrate, celebrations);\n\n    const onCloseChallengToolbox = t => {\n        console.log('onCloseChallengToolbox');\n    };\n\n    const card = await t.card('name').get('name');\n\n    console.log('card: ', JSON.stringify(card, null, 2));\n\n    return [\n        {\n            icon: GRAY_ICON,\n            text: challengeText,\n            condition: trelloEnums.Condition.Always,\n            callback: function(t){\n                return t.modal({\n                    title: \"Challenge\",                    \n                    args: { type: trelloEnums.Type.Challenge },\n                    url: './modals/challenge.html',\n                    fullscreen: false,\n                    height: 500,                    \n                    callback: onCloseChallengToolbox,\n                });\n            }\n        },      \n        {\n            icon: GRAY_ICON,\n            text: celebrateText,\n            condition: trelloEnums.Condition.Always,\n            callback: function(t){\n                return t.modal({\n                    title: \"Celebrate\",\n                    args: { type: trelloEnums.Type.Celebrate },\n                    url: './modals/celebrate.html',\n                    fullscreen: false,\n                    height: 500\n                });\n            }\n        }\n    ];\n};    \n\nexport const getCardButtons = (t, opts) => {\n    return get(t);\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","const Authors = Object.freeze({\n    RTW: 'rtw',\n    Spotify: 'spotify',\n    SWM: \"swm\",\n    PrinciplesGreen: \"pg\",\n    Princeton: \"princeton\"\n});\n\nconst Environments = Object.freeze({\n    Trello: 'Trello'\n});\n\nconst enums = {\n    Authors,\n    Environments\n};\n\nexport default enums;","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"bJmGX\"))).then(() => parcelRequire('b6NUa'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"7WKo9\"))).then(() => parcelRequire('bEksa'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"cX2tx\"))).then(() => parcelRequire('bmO0s'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"irEM1\"))).then(() => parcelRequire('f1e8W'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"2Ywgl\"))).then(() => parcelRequire('ffvez'));","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"cHbDk\"))).then(() => parcelRequire('epFvb'));","import enums from './enums';\n\nconst getTrelloData = async author => {\n\n    const id = author.id;\n\n    return await getAuthorDataById(id);\n\n};\n\nconst getAuthorDataById = async id => {\n\n    let data, trelloData;\n    \n    return (async () => {\n        switch(id) {\n            case enums.Authors.RTW:\n                data = await import('./data/rtw.json');\n                trelloData = await import('./data/rtw-trello.json');\n                return { ...data, ...trelloData };\n            case enums.Authors.Spotify:\n                data = await import('./data/spotify.json');\n                trelloData = await import('./data/spotify-trello.json');\n                return { ...data, ...trelloData };\n            case enums.Authors.SWM:\n                data = await import('./data/swm.json');\n                return { ...data, ...trelloData };\n            case enums.Authors.Princeton:\n                data = await import('./data/princeton.json');\n                return { ...data, ...trelloData };\n        }\n    })();\n};\n\nconst api = {\n    getTrelloData,\n    getAuthorDataById\n};\n\nexport default api;","import regeneratorRuntime from \"regenerator-runtime\";\nimport ChallengeLog from '../shared/challenge-log';\nimport trelloEnums from '../shared/trello-enums';\nimport api from '../api/api';\n\nconst getData = async prefs => {\n    return await api.getAuthorDataById(prefs.id);\n};\n\nconst getCapabilityPreferences = (data, capability) => {\n    \n    const capabilities = data.capabilities;\n    const capabilitySelection = capabilities.find(c => c.capability === capability);\n\n    if(capabilitySelection && capabilitySelection.enabled) {\n        return capabilitySelection.labels;\n    } else {\n        return [];\n    }\n};\n\nconst onLabelForPopupClick = (t, context, popup) => {\n    \n    return t.popup({\n        title: popup.prompt,\n        items: popup.effects\n    });\n\n    // click events missing …\n};\n\nconst onLabelForActionClick = async (t, context, pledge) => {\n\n    const challengeLog = new ChallengeLog();\n    \n    const { isPledgeNowLogged, updatedPledges } = challengeLog.togglePledge(context, pledge);\n\n    await t.set(scope, visibility, key, updatedPledges); // pass func to mock\n    return await t.get(scope, visibility, key);\n\n    // update label in situ after click?\n};\n\nconst getTrelloLabels = async ({pledges, log, context, popup = null}) => {\n\n    console.log('getTrelloLabels log: ', log);\n\n    return popup \n            ? pledges.map(pledge => {\n                return {\n                    text: `${pledge.text} ${ChallengeLog.getCustomBadgeCounts(context, log, pledge)}`,\n                    condition: trelloEnums.Condition.Always,\n                    callback: t => onLabelForPopupClick(t, context, popup)\n                }\n            })\n            : pledges.map(pledge => {\n                return {\n                    text: pledge.text,\n                    condition: trelloEnums.Condition.Always,\n                    callback: t => onLabelForActionClick(t, context, pledge)\n                }\n            });\n};\n\nconst getPopup = async data => {\n    \n    const popup = data.popup;\n\n    if(!popup || (popup && !popup.enabled)) return null;\n\n    return popup;\n}\n\nconst selector = {\n    getData,\n    getCapabilityPreferences,\n    getTrelloLabels,\n    getPopup\n}\n\nexport default selector;","import trelloEnums from '../shared/trello-enums';\nimport selector from '../shared/capability-selector';\n\nconst get = async t => {\n\n    const context = t.getContext();\n    const logEntries = await t.get(trelloEnums.Scope.Card, trelloEnums.Visibility.Shared, trelloEnums.Key.LogEntries);\n\n    let log;\n\n    if(logEntries && logEntries !== undefined) {\n        log = challengeLog.setLog(logEntries);\n    }\n    \n    const prefs = await t.get(trelloEnums.Scope.Board, trelloEnums.Visibility.Shared, trelloEnums.Key.ChallengePreferences);\n    const data = await selector.getData(prefs);\n\n    const pledges = await selector.getCapabilityPreferences(data, trelloEnums.Capability.CardDetailBadges);\n    const labels = await selector.getTrelloLabels({pledges, log, context: {board: context.board, card: context.card, member: context.member}});\n\n    return labels;\n};    \n\nexport const getCardDetailBadges = (t, opts) => {\n    return get(t);\n}","import { getBoardButtons } from \"../capabilities/board-buttons\";\nimport { getCardBadges } from \"../capabilities/card-badges\";\nimport { getCardButtons } from \"../capabilities/card-buttons\";\nimport { getCardDetailBadges } from \"../capabilities/card-detail-badges\";\n\nwindow.TrelloPowerUp.initialize({\n\n    \"board-buttons\": (t, opts) => getBoardButtons(t, opts),\n    \"card-badges\": (t, opts) => getCardBadges(t, opts),\n    'card-buttons': (t, opts) => getCardButtons(t, opts),\n    'card-detail-badges': (t, opts) => getCardDetailBadges(t, opts),\n\n});"],"names":["$8b4d1930797b255e$export$6503ec6e8aabbaf","$8b4d1930797b255e$export$f7ad0328861e2f03","$8b4d1930797b255e$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$08debb591dcf7038$export$2e2bcd8739ae039","freeze","Board","Member","Card","Organization","Challenge","Celebrate","Shared","Private","LogEntries","ChallengePreferences","BoardButtons","CardBadges","CardButtons","CardDetailBadges","Admin","Edit","ReadOnly","SignedIn","SignedOut","Always","$56c9c886f2e8eba6$var$get","async","t","text","callback","prefs","get","Scope","Visibility","Key","popup","title","url","args","myArgs","onBtnClick","condition","Condition","$070c272ef4086d70$export$2e2bcd8739ae039","type","Type","this","log","currentPledge","context","currentReason","islogTruthy","val","entries","islogFalsy","isLogEmpty","getLog","setLog","setType","getCurrentPledge","addPledgeToLog","push","board","member","card","pledge","reasons","isPledgeNowLogged","updatedPledges","map","entry","filter","removePledgeFromLog","getReasonsForCurrentPledge","togglePledge","isPledgeLogged","find","getLoggedPledges","undefined","addReasonToPledge","updatedReasons","isReasonNowLogged","removeReasonFromPledge","r","toggleReason","reason","isReasonLogged","getReasonsCount","reasonCount","toString","getReasonsCountByPledge","pledgeId","count","challenges","celebrations","Set","e","$2db22ad5133da2c5$export$c73bb284c898a327","opts","scope","visibility","key","capability","Capability","console","getContext","getChallengeBadgeCounts","challengeText","getButtonText","celebrateText","badges","color","badgeArray","then","$2db22ad5133da2c5$var$get","$ffcb280b61afb824$export$79f535b67280aad0","onCloseChallengToolbox","stringify","icon","modal","fullscreen","height","$ffcb280b61afb824$var$get","$87891cba7e6336b8$var$runtime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","Promise","iter","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","$07f1dab97776ed9a$export$2e2bcd8739ae039","RTW","Spotify","SWM","PrinciplesGreen","Princeton","Trello","module","import","$0d2d75f2a4f26470$var$getAuthorDataById","data","trelloData","Authors","$0d2d75f2a4f26470$export$2e2bcd8739ae039","author","$2e4141f889ef1b6d$export$2e2bcd8739ae039","getAuthorDataById","capabilitySelection","capabilities","c","enabled","labels","pledges","getCustomBadgeCounts","prompt","items","effects","$2e4141f889ef1b6d$var$onLabelForPopupClick","challengeLog","set","$2e4141f889ef1b6d$var$onLabelForActionClick","$c8e855563fa8e8ac$export$f01c584eba1b8a62","logEntries","getData","getCapabilityPreferences","getTrelloLabels","$c8e855563fa8e8ac$var$get","window","TrelloPowerUp","initialize"],"version":3,"file":"index.fd94b6c3.js.map"}