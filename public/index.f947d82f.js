var e={Scope:Object.freeze({Board:"board",Member:"member",Card:"card",Organization:"organization"}),Type:Object.freeze({Challenge:"challenge",Celebrate:"celebrate"}),Visibility:Object.freeze({Shared:"shared",Private:"private"}),Key:Object.freeze({LogEntries:"Log entries",ChallengePreferences:"Challenge preferences"}),Capability:Object.freeze({BoardButtons:"board-buttons",CardBadges:"card-badges",CardButtons:"card-buttons",CardDetailBadges:"card-detail-badges"}),Condition:Object.freeze({Admin:"admin",Edit:"edit",ReadOnly:"readOnly",SignedIn:"signedIn",SignedOut:"signedOut",Always:"always"})};var t=class{constructor(e){this.type=e,this.log=[],this.currentPledge={},this.context={},this.currentReason={}}islogTruthy(e){return null!=e&&e!==[]&&Object.entries(e).length>0||"number"==typeof e}islogFalsy(e){return!this.islogTruthy(e)}isLogEmpty(){return this.log===[]}getLog(){return this.log}setLog(e){return this.log=e,this.log}setType(e){return this.type=e,this.type}getCurrentPledge(){return this.currentPledge}addPledgeToLog(){return this.log.push({type:this.type,board:this.context.board,member:this.context.member,card:this.context.card,pledge:{id:this.currentPledge.id,text:this.currentPledge.text,reasons:[]}}),{isPledgeNowLogged:!0,updatedPledges:this.log.map((e=>e.pledge)).filter((e=>e.type===this.type))}}removePledgeFromLog(){return this.isLogEmpty()?{isPledgeNowLogged:!1,updatedPledges:[]}:this.getReasonsForCurrentPledge(this.currentPledge).length>0?{isPledgeNowLogged:!1,updatedPledges:this.log.map((e=>e.pledge))}:(this.log=this.log.filter((e=>e.pledge.id!==this.currentPledge.id&&e.type===this.type)),{isPledgeNowLogged:!1,updatedPledges:this.log.map((e=>e.pledge)).filter((e=>e.type===this.type))})}togglePledge(e,t){this.currentPledge=t,this.context=e;const s=!this.isLogEmpty()&&this.islogTruthy(this.log.find((e=>e.pledge.id===t.id&&e.type===this.type))),{isPledgeNowLogged:n,updatedPledges:r}=s?this.removePledgeFromLog():this.addPledgeToLog();return{isPledgeNowLogged:n,updatedPledges:r}}getLoggedPledges(){return this.log.map((e=>e.pledge))}getReasonsForCurrentPledge(){if(this.islogFalsy(this.currentPledge)||this.isLogEmpty())return[];const e=this.log.find((e=>e.pledge.id===this.currentPledge.id&&e.type===this.type)).pledge.reasons;return void 0===e?[]:e}addReasonToPledge(){const e=[...this.getReasonsForCurrentPledge(),this.currentReason],t=[...this.getReasonsForCurrentPledge(),this.currentReason];return this.log.find((e=>e.pledge.id===this.currentPledge.id&&e.type===this.type)).pledge.reasons=e,{isReasonNowLogged:!0,updatedReasons:t}}removeReasonFromPledge(){return this.log.find((e=>e.pledge.id===this.currentPledge.id&&e.type===this.type)).pledge.reasons=this.log.find((e=>e.pledge.id===this.currentPledge.id&&e.type===this.type)).pledge.reasons.filter((e=>e.id!==this.currentReason.id)),{isReasonNowLogged:!1,updatedReasons:this.log.find((e=>e.pledge.id===this.currentPledge.id&&e.type===this.type)).pledge.reasons}}toggleReason(e){if(this.currentPledge==={})return;this.currentReason=e;const t=!!this.log.find((e=>e.pledge.id===this.currentPledge.id&&e.type===this.type))&&!!this.log.find((t=>t.pledge.id===this.currentPledge.id&&t.type===this.type&&t.pledge.reasons.find((t=>t.id===e.id)))),{isReasonNowLogged:s,updatedReasons:n}=t?this.removeReasonFromPledge():this.addReasonToPledge();return{isReasonNowLogged:s,updatedReasons:n}}getReasonsCount(){const e=this.log.find((e=>e.pledge.id===this.currentPledge.id&&e.type===this.type)),t=void 0!==e&&e.pledge.reasons?e.pledge.reasons:[],s=t.length>0?t.length:0;return 0===s?"":s.toString()}getReasonsCountByPledge(e){const t=this.log.find((t=>t.pledge.id===e&&t.type===this.type)),s=void 0!==t&&t.pledge.reasons?t.pledge.reasons:[],n=s.length>0?s.length:0;return 0===n?"":n.toString()}static getButtonText(t,s){let n="";switch(t){case e.Type.Challenge:n=s>0?`Challenges (${s})`:"Challenge";break;case e.Type.Celebrate:n=s>0?`Celebrations (${s})`:"Celebrate"}return n}static getChallengeBadgeCounts(t,s){if(void 0===s)return{challenges:0,celebrations:0};const n=t.card;return{challenges:[...new Set(s.filter((t=>t.type===e.Type.Challenge&&t.card===n)).map((e=>e.member)))].length,celebrations:[...new Set(s.filter((t=>t.type===e.Type.Celebrate&&t.card===n)).map((e=>e.member)))].length}}static getChallengePledgeCounts(t,s){if(void 0===s)return{challenges:0,celebrations:0};const n=t.card;return{challenges:s.filter((t=>t.type===e.Type.Challenge&&t.card===n)).length,celebrations:s.filter((t=>t.type===e.Type.Celebrate&&t.card===n)).length}}};JSON.parse('{"authors":[{"name":"ResponsibleTech.Work","title":"ResponsibleTech.Work Pledges"},{"name":"Spotify","title":"Spotify Ethics Assessment"},{"name":"Sustainable Web Manifesto","title":"Sustainable Web Manifesto"},{"name":"Principles.Green","title":"Principles of Green Software Engineering"}]}');const s=(s,n)=>(async s=>{const n=e.Scope.Card,r=e.Visibility.Shared,o=e.Key.LogEntries,l=e.Capability.CardBadges,i=await s.get(n,r,o);console.log(`Data stored for ${o} against ${n} with ${r} access for ${l}  : `,i);const g=s.getContext();console.log("Context for card badges: ",g);const{challenges:d,celebrations:a}=t.getChallengeBadgeCounts(g,i),c=t.getButtonText(e.Type.Challenge,d),h=t.getButtonText(e.Type.Celebrate,a);if(console.log(`Current value for ${o} for card-badges`,i),0===d&&0===a)return[];const p=[{text:c,color:"red"},{text:h,color:"green"}],u=[];return 0!==d&&u.push(p[0]),0!==d&&u.push(p[1]),s.card("id","name").then((function(e){return u}))})(s),n=(s,n)=>(async s=>{const n=e.Scope.Card,r=e.Visibility.Shared,o=e.Key.LogEntries,l=e.Capability.CardButtons,i=await s.get(n,r,o);console.log(`Data stored for ${o} against ${n} with ${r} access for ${l}  : `,i);const g=s.getContext();console.log("Context for card badges: ",g);const{challenges:d,celebrations:a}=t.getChallengeBadgeCounts(g,i),c=t.getButtonText(e.Type.Challenge,d),h=t.getButtonText(e.Type.Celebrate,a),p=e=>{console.log("onCloseChallengToolbox")},u=await s.card("name").get("name");return console.log("card: ",JSON.stringify(u,null,2)),[{icon:"https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg",text:c,condition:e.Condition.Always,callback:function(t){return t.modal({title:"Challenge",args:{type:e.Type.Challenge},url:"./modals/challenge.html",fullscreen:!1,height:500,callback:p})}},{icon:"https://cdn.hyperdev.com/us-east-1%3A3d31b21c-01a0-4da2-8827-4bc6e88b7618%2Ficon-gray.svg",text:h,condition:e.Condition.Always,callback:function(t){return t.modal({title:"Celebrate",args:{type:e.Type.Celebrate},url:"./modals/celebrate.html",fullscreen:!1,height:500})}}]})(s);window.TrelloPowerUp.initialize({"card-badges":(e,t)=>s(e),"card-buttons":(e,t)=>n(e)});
//# sourceMappingURL=index.f947d82f.js.map
